//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: records.proto

package vault.records;

@kotlin.jvm.JvmName("-initializeitem")
public inline fun item(block: vault.records.ItemKt.Dsl.() -> kotlin.Unit): vault.records.Records.Item =
  vault.records.ItemKt.Dsl._create(vault.records.Records.Item.newBuilder()).apply { block() }._build()
public object ItemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vault.records.Records.Item.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vault.records.Records.Item.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vault.records.Records.Item = _builder.build()

    /**
     * <code>.vault.records.Record record = 1;</code>
     */
    public var record: vault.records.Records.Record
      @JvmName("getRecord")
      get() = _builder.getRecord()
      @JvmName("setRecord")
      set(value) {
        _builder.setRecord(value)
      }
    /**
     * <code>.vault.records.Record record = 1;</code>
     */
    public fun clearRecord() {
      _builder.clearRecord()
    }
    /**
     * <code>.vault.records.Record record = 1;</code>
     * @return Whether the record field is set.
     */
    public fun hasRecord(): kotlin.Boolean {
      return _builder.hasRecord()
    }
    public val resultCase: vault.records.Records.Item.ResultCase
      @JvmName("getResultCase")
      get() = _builder.getResultCase()

    public fun clearResult() {
      _builder.clearResult()
    }
  }
}
public inline fun vault.records.Records.Item.copy(block: vault.records.ItemKt.Dsl.() -> kotlin.Unit): vault.records.Records.Item =
  vault.records.ItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val vault.records.Records.ItemOrBuilder.recordOrNull: vault.records.Records.Record?
  get() = if (hasRecord()) getRecord() else null

