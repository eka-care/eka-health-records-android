// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: interpretation.proto

package vault.vitals;

public final class InterpretationOuterClass {
  private InterpretationOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code vault.vitals.Interpretation}
   */
  public enum Interpretation
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Interpretation -&gt; Unspecified.
     * </pre>
     *
     * <code>INTERPRETATION_UNSPECIFIED = 0;</code>
     */
    INTERPRETATION_UNSPECIFIED(0),
    /**
     * <pre>
     * Interpretation -&gt; Normal.
     * </pre>
     *
     * <code>INTERPRETATION_NORMAL = 1;</code>
     */
    INTERPRETATION_NORMAL(1),
    /**
     * <pre>
     * Interpretation -&gt; Critically High.
     * </pre>
     *
     * <code>INTERPRETATION_CRITICALLY_HIGH = 2;</code>
     */
    INTERPRETATION_CRITICALLY_HIGH(2),
    /**
     * <pre>
     * Interpretation -&gt; Very High.
     * </pre>
     *
     * <code>INTERPRETATION_VERY_HIGH = 3;</code>
     */
    INTERPRETATION_VERY_HIGH(3),
    /**
     * <pre>
     * Interpretation -&gt; High.
     * </pre>
     *
     * <code>INTERPRETATION_HIGH = 4;</code>
     */
    INTERPRETATION_HIGH(4),
    /**
     * <pre>
     * Interpretation -&gt; Borderline High.
     * </pre>
     *
     * <code>INTERPRETATION_BORDERLINE_HIGH = 5;</code>
     */
    INTERPRETATION_BORDERLINE_HIGH(5),
    /**
     * <pre>
     * Interpretation -&gt; Critically Low.
     * </pre>
     *
     * <code>INTERPRETATION_CRITICALLY_LOW = 6;</code>
     */
    INTERPRETATION_CRITICALLY_LOW(6),
    /**
     * <pre>
     * Interpretation -&gt; Very Low.
     * </pre>
     *
     * <code>INTERPRETATION_VERY_LOW = 7;</code>
     */
    INTERPRETATION_VERY_LOW(7),
    /**
     * <pre>
     * Interpretation -&gt; Low.
     * </pre>
     *
     * <code>INTERPRETATION_LOW = 8;</code>
     */
    INTERPRETATION_LOW(8),
    /**
     * <pre>
     * Interpretation -&gt; Borderline Low.
     * </pre>
     *
     * <code>INTERPRETATION_BORDERLINE_LOW = 9;</code>
     */
    INTERPRETATION_BORDERLINE_LOW(9),
    /**
     * <pre>
     * Interpretation -&gt; Abnormal.
     * </pre>
     *
     * <code>INTERPRETATION_ABNORMAL = 10;</code>
     */
    INTERPRETATION_ABNORMAL(10),
    /**
     * <pre>
     * Interpretation -&gt; Undertermined.
     * </pre>
     *
     * <code>INTERPRETATION_UNDETERMINED = 11;</code>
     */
    INTERPRETATION_UNDETERMINED(11),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Interpretation -&gt; Unspecified.
     * </pre>
     *
     * <code>INTERPRETATION_UNSPECIFIED = 0;</code>
     */
    public static final int INTERPRETATION_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Interpretation -&gt; Normal.
     * </pre>
     *
     * <code>INTERPRETATION_NORMAL = 1;</code>
     */
    public static final int INTERPRETATION_NORMAL_VALUE = 1;
    /**
     * <pre>
     * Interpretation -&gt; Critically High.
     * </pre>
     *
     * <code>INTERPRETATION_CRITICALLY_HIGH = 2;</code>
     */
    public static final int INTERPRETATION_CRITICALLY_HIGH_VALUE = 2;
    /**
     * <pre>
     * Interpretation -&gt; Very High.
     * </pre>
     *
     * <code>INTERPRETATION_VERY_HIGH = 3;</code>
     */
    public static final int INTERPRETATION_VERY_HIGH_VALUE = 3;
    /**
     * <pre>
     * Interpretation -&gt; High.
     * </pre>
     *
     * <code>INTERPRETATION_HIGH = 4;</code>
     */
    public static final int INTERPRETATION_HIGH_VALUE = 4;
    /**
     * <pre>
     * Interpretation -&gt; Borderline High.
     * </pre>
     *
     * <code>INTERPRETATION_BORDERLINE_HIGH = 5;</code>
     */
    public static final int INTERPRETATION_BORDERLINE_HIGH_VALUE = 5;
    /**
     * <pre>
     * Interpretation -&gt; Critically Low.
     * </pre>
     *
     * <code>INTERPRETATION_CRITICALLY_LOW = 6;</code>
     */
    public static final int INTERPRETATION_CRITICALLY_LOW_VALUE = 6;
    /**
     * <pre>
     * Interpretation -&gt; Very Low.
     * </pre>
     *
     * <code>INTERPRETATION_VERY_LOW = 7;</code>
     */
    public static final int INTERPRETATION_VERY_LOW_VALUE = 7;
    /**
     * <pre>
     * Interpretation -&gt; Low.
     * </pre>
     *
     * <code>INTERPRETATION_LOW = 8;</code>
     */
    public static final int INTERPRETATION_LOW_VALUE = 8;
    /**
     * <pre>
     * Interpretation -&gt; Borderline Low.
     * </pre>
     *
     * <code>INTERPRETATION_BORDERLINE_LOW = 9;</code>
     */
    public static final int INTERPRETATION_BORDERLINE_LOW_VALUE = 9;
    /**
     * <pre>
     * Interpretation -&gt; Abnormal.
     * </pre>
     *
     * <code>INTERPRETATION_ABNORMAL = 10;</code>
     */
    public static final int INTERPRETATION_ABNORMAL_VALUE = 10;
    /**
     * <pre>
     * Interpretation -&gt; Undertermined.
     * </pre>
     *
     * <code>INTERPRETATION_UNDETERMINED = 11;</code>
     */
    public static final int INTERPRETATION_UNDETERMINED_VALUE = 11;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Interpretation valueOf(int value) {
      return forNumber(value);
    }

    public static Interpretation forNumber(int value) {
      switch (value) {
        case 0: return INTERPRETATION_UNSPECIFIED;
        case 1: return INTERPRETATION_NORMAL;
        case 2: return INTERPRETATION_CRITICALLY_HIGH;
        case 3: return INTERPRETATION_VERY_HIGH;
        case 4: return INTERPRETATION_HIGH;
        case 5: return INTERPRETATION_BORDERLINE_HIGH;
        case 6: return INTERPRETATION_CRITICALLY_LOW;
        case 7: return INTERPRETATION_VERY_LOW;
        case 8: return INTERPRETATION_LOW;
        case 9: return INTERPRETATION_BORDERLINE_LOW;
        case 10: return INTERPRETATION_ABNORMAL;
        case 11: return INTERPRETATION_UNDETERMINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Interpretation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Interpretation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Interpretation>() {
            @java.lang.Override
            public Interpretation findValueByNumber(int number) {
              return Interpretation.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return InterpretationVerifier.INSTANCE;
    }

    private static final class InterpretationVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new InterpretationVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return Interpretation.forNumber(number) != null;
            }
          };

    private final int value;

    private Interpretation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:vault.vitals.Interpretation)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
