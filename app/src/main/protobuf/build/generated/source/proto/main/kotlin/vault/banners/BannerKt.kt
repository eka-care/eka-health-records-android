//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: banners.proto

package vault.banners;

@kotlin.jvm.JvmName("-initializebanner")
public inline fun banner(block: vault.banners.BannerKt.Dsl.() -> kotlin.Unit): vault.banners.Banners.Banner =
  vault.banners.BannerKt.Dsl._create(vault.banners.Banners.Banner.newBuilder()).apply { block() }._build()
public object BannerKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vault.banners.Banners.Banner.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vault.banners.Banners.Banner.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vault.banners.Banners.Banner = _builder.build()

    /**
     * <pre>
     * Title of the banner.
     * </pre>
     *
     * <code>string title = 1;</code>
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * <pre>
     * Title of the banner.
     * </pre>
     *
     * <code>string title = 1;</code>
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * <pre>
     * Body or description of the banner.
     * </pre>
     *
     * <code>optional string body = 2;</code>
     */
    public var body: kotlin.String
      @JvmName("getBody")
      get() = _builder.getBody()
      @JvmName("setBody")
      set(value) {
        _builder.setBody(value)
      }
    /**
     * <pre>
     * Body or description of the banner.
     * </pre>
     *
     * <code>optional string body = 2;</code>
     */
    public fun clearBody() {
      _builder.clearBody()
    }
    /**
     * <pre>
     * Body or description of the banner.
     * </pre>
     *
     * <code>optional string body = 2;</code>
     * @return Whether the body field is set.
     */
    public fun hasBody(): kotlin.Boolean {
      return _builder.hasBody()
    }

    /**
     * <pre>
     * CTA configuration for button.
     * </pre>
     *
     * <code>.vault.common.CTA cta = 3;</code>
     */
    public var cta: vault.common.Cta.CTA
      @JvmName("getCta")
      get() = _builder.getCta()
      @JvmName("setCta")
      set(value) {
        _builder.setCta(value)
      }
    /**
     * <pre>
     * CTA configuration for button.
     * </pre>
     *
     * <code>.vault.common.CTA cta = 3;</code>
     */
    public fun clearCta() {
      _builder.clearCta()
    }
    /**
     * <pre>
     * CTA configuration for button.
     * </pre>
     *
     * <code>.vault.common.CTA cta = 3;</code>
     * @return Whether the cta field is set.
     */
    public fun hasCta(): kotlin.Boolean {
      return _builder.hasCta()
    }

    /**
     * <pre>
     * Colour of the banner in hex code.
     * </pre>
     *
     * <code>string colour = 4;</code>
     */
    public var colour: kotlin.String
      @JvmName("getColour")
      get() = _builder.getColour()
      @JvmName("setColour")
      set(value) {
        _builder.setColour(value)
      }
    /**
     * <pre>
     * Colour of the banner in hex code.
     * </pre>
     *
     * <code>string colour = 4;</code>
     */
    public fun clearColour() {
      _builder.clearColour()
    }

    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string img = 5;</code>
     */
    public var img: kotlin.String
      @JvmName("getImg")
      get() = _builder.getImg()
      @JvmName("setImg")
      set(value) {
        _builder.setImg(value)
      }
    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string img = 5;</code>
     */
    public fun clearImg() {
      _builder.clearImg()
    }
    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string img = 5;</code>
     * @return Whether the img field is set.
     */
    public fun hasImg(): kotlin.Boolean {
      return _builder.hasImg()
    }

    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 6;</code>
     */
    public var lottie: kotlin.String
      @JvmName("getLottie")
      get() = _builder.getLottie()
      @JvmName("setLottie")
      set(value) {
        _builder.setLottie(value)
      }
    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 6;</code>
     */
    public fun clearLottie() {
      _builder.clearLottie()
    }
    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 6;</code>
     * @return Whether the lottie field is set.
     */
    public fun hasLottie(): kotlin.Boolean {
      return _builder.hasLottie()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class BodyParametersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * dynamic parameters with body.
     * </pre>
     *
     * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 7;</code>
     */
     public val bodyParameters: com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getBodyParametersList()
      )
    /**
     * <pre>
     * dynamic parameters with body.
     * </pre>
     *
     * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 7;</code>
     * @param value The bodyParameters to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addBodyParameters")
    public fun com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>.add(value: vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter) {
      _builder.addBodyParameters(value)
    }/**
     * <pre>
     * dynamic parameters with body.
     * </pre>
     *
     * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 7;</code>
     * @param value The bodyParameters to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignBodyParameters")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>.plusAssign(value: vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter) {
      add(value)
    }/**
     * <pre>
     * dynamic parameters with body.
     * </pre>
     *
     * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 7;</code>
     * @param values The bodyParameters to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllBodyParameters")
    public fun com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>.addAll(values: kotlin.collections.Iterable<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter>) {
      _builder.addAllBodyParameters(values)
    }/**
     * <pre>
     * dynamic parameters with body.
     * </pre>
     *
     * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 7;</code>
     * @param values The bodyParameters to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllBodyParameters")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>.plusAssign(values: kotlin.collections.Iterable<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter>) {
      addAll(values)
    }/**
     * <pre>
     * dynamic parameters with body.
     * </pre>
     *
     * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 7;</code>
     * @param index The index to set the value at.
     * @param value The bodyParameters to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setBodyParameters")
    public operator fun com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>.set(index: kotlin.Int, value: vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter) {
      _builder.setBodyParameters(index, value)
    }/**
     * <pre>
     * dynamic parameters with body.
     * </pre>
     *
     * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 7;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearBodyParameters")
    public fun com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>.clear() {
      _builder.clearBodyParameters()
    }
    /**
     * <pre>
     * ID represents banner/card identifier.
     * </pre>
     *
     * <code>optional string id = 8;</code>
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <pre>
     * ID represents banner/card identifier.
     * </pre>
     *
     * <code>optional string id = 8;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }
    /**
     * <pre>
     * ID represents banner/card identifier.
     * </pre>
     *
     * <code>optional string id = 8;</code>
     * @return Whether the id field is set.
     */
    public fun hasId(): kotlin.Boolean {
      return _builder.hasId()
    }
    public val imageCase: vault.banners.Banners.Banner.ImageCase
      @JvmName("getImageCase")
      get() = _builder.getImageCase()

    public fun clearImage() {
      _builder.clearImage()
    }
  }
}
public inline fun vault.banners.Banners.Banner.copy(block: vault.banners.BannerKt.Dsl.() -> kotlin.Unit): vault.banners.Banners.Banner =
  vault.banners.BannerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val vault.banners.Banners.BannerOrBuilder.ctaOrNull: vault.common.Cta.CTA?
  get() = if (hasCta()) getCta() else null

