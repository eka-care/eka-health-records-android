//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bannersv5.proto

package vault.bannersv5;

@kotlin.jvm.JvmName("-initializebanner")
public inline fun banner(block: vault.bannersv5.BannerKt.Dsl.() -> kotlin.Unit): vault.bannersv5.Bannersv5.Banner =
  vault.bannersv5.BannerKt.Dsl._create(vault.bannersv5.Bannersv5.Banner.newBuilder()).apply { block() }._build()
public object BannerKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vault.bannersv5.Bannersv5.Banner.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vault.bannersv5.Bannersv5.Banner.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vault.bannersv5.Bannersv5.Banner = _builder.build()

    /**
     * <code>.vault.bannersv5.Banner.Item item = 1;</code>
     */
    public var item: vault.bannersv5.Bannersv5.Banner.Item
      @JvmName("getItem")
      get() = _builder.getItem()
      @JvmName("setItem")
      set(value) {
        _builder.setItem(value)
      }
    /**
     * <code>.vault.bannersv5.Banner.Item item = 1;</code>
     */
    public fun clearItem() {
      _builder.clearItem()
    }
    /**
     * <code>.vault.bannersv5.Banner.Item item = 1;</code>
     * @return Whether the item field is set.
     */
    public fun hasItem(): kotlin.Boolean {
      return _builder.hasItem()
    }

    /**
     * <pre>
     * Hash of the banner.
     * </pre>
     *
     * <code>string hash = 2;</code>
     */
    public var hash: kotlin.String
      @JvmName("getHash")
      get() = _builder.getHash()
      @JvmName("setHash")
      set(value) {
        _builder.setHash(value)
      }
    /**
     * <pre>
     * Hash of the banner.
     * </pre>
     *
     * <code>string hash = 2;</code>
     */
    public fun clearHash() {
      _builder.clearHash()
    }
  }
  @kotlin.jvm.JvmName("-initializeitem")
  public inline fun item(block: vault.bannersv5.BannerKt.ItemKt.Dsl.() -> kotlin.Unit): vault.bannersv5.Bannersv5.Banner.Item =
    vault.bannersv5.BannerKt.ItemKt.Dsl._create(vault.bannersv5.Bannersv5.Banner.Item.newBuilder()).apply { block() }._build()
  public object ItemKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: vault.bannersv5.Bannersv5.Banner.Item.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: vault.bannersv5.Bannersv5.Banner.Item.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): vault.bannersv5.Bannersv5.Banner.Item = _builder.build()

      /**
       * <code>.vault.bannersv5.Banner.Content content = 1;</code>
       */
      public var content: vault.bannersv5.Bannersv5.Banner.Content
        @JvmName("getContent")
        get() = _builder.getContent()
        @JvmName("setContent")
        set(value) {
          _builder.setContent(value)
        }
      /**
       * <code>.vault.bannersv5.Banner.Content content = 1;</code>
       */
      public fun clearContent() {
        _builder.clearContent()
      }
      /**
       * <code>.vault.bannersv5.Banner.Content content = 1;</code>
       * @return Whether the content field is set.
       */
      public fun hasContent(): kotlin.Boolean {
        return _builder.hasContent()
      }

      /**
       * <code>.vault.media.Media asset = 2;</code>
       */
      public var asset: vault.media.MediaOuterClass.Media
        @JvmName("getAsset")
        get() = _builder.getAsset()
        @JvmName("setAsset")
        set(value) {
          _builder.setAsset(value)
        }
      /**
       * <code>.vault.media.Media asset = 2;</code>
       */
      public fun clearAsset() {
        _builder.clearAsset()
      }
      /**
       * <code>.vault.media.Media asset = 2;</code>
       * @return Whether the asset field is set.
       */
      public fun hasAsset(): kotlin.Boolean {
        return _builder.hasAsset()
      }

      /**
       * <pre>
       * ID represents banner identifier for tracking in Mixpanel.
       * </pre>
       *
       * <code>string banner_id = 3;</code>
       */
      public var bannerId: kotlin.String
        @JvmName("getBannerId")
        get() = _builder.getBannerId()
        @JvmName("setBannerId")
        set(value) {
          _builder.setBannerId(value)
        }
      /**
       * <pre>
       * ID represents banner identifier for tracking in Mixpanel.
       * </pre>
       *
       * <code>string banner_id = 3;</code>
       */
      public fun clearBannerId() {
        _builder.clearBannerId()
      }

      /**
       * <pre>
       * CTA configuration for button.
       * </pre>
       *
       * <code>.vault.common.CTA cta = 4;</code>
       */
      public var cta: vault.common.Cta.CTA
        @JvmName("getCta")
        get() = _builder.getCta()
        @JvmName("setCta")
        set(value) {
          _builder.setCta(value)
        }
      /**
       * <pre>
       * CTA configuration for button.
       * </pre>
       *
       * <code>.vault.common.CTA cta = 4;</code>
       */
      public fun clearCta() {
        _builder.clearCta()
      }
      /**
       * <pre>
       * CTA configuration for button.
       * </pre>
       *
       * <code>.vault.common.CTA cta = 4;</code>
       * @return Whether the cta field is set.
       */
      public fun hasCta(): kotlin.Boolean {
        return _builder.hasCta()
      }
      public val resultCase: vault.bannersv5.Bannersv5.Banner.Item.ResultCase
        @JvmName("getResultCase")
        get() = _builder.getResultCase()

      public fun clearResult() {
        _builder.clearResult()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializecontent")
  public inline fun content(block: vault.bannersv5.BannerKt.ContentKt.Dsl.() -> kotlin.Unit): vault.bannersv5.Bannersv5.Banner.Content =
    vault.bannersv5.BannerKt.ContentKt.Dsl._create(vault.bannersv5.Bannersv5.Banner.Content.newBuilder()).apply { block() }._build()
  public object ContentKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: vault.bannersv5.Bannersv5.Banner.Content.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: vault.bannersv5.Bannersv5.Banner.Content.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): vault.bannersv5.Bannersv5.Banner.Content = _builder.build()

      /**
       * <pre>
       * Title of the banner.
       * </pre>
       *
       * <code>string title = 1;</code>
       */
      public var title: kotlin.String
        @JvmName("getTitle")
        get() = _builder.getTitle()
        @JvmName("setTitle")
        set(value) {
          _builder.setTitle(value)
        }
      /**
       * <pre>
       * Title of the banner.
       * </pre>
       *
       * <code>string title = 1;</code>
       */
      public fun clearTitle() {
        _builder.clearTitle()
      }

      /**
       * <pre>
       * Sub Title of the banner.
       * </pre>
       *
       * <code>optional string sub_title = 2;</code>
       */
      public var subTitle: kotlin.String
        @JvmName("getSubTitle")
        get() = _builder.getSubTitle()
        @JvmName("setSubTitle")
        set(value) {
          _builder.setSubTitle(value)
        }
      /**
       * <pre>
       * Sub Title of the banner.
       * </pre>
       *
       * <code>optional string sub_title = 2;</code>
       */
      public fun clearSubTitle() {
        _builder.clearSubTitle()
      }
      /**
       * <pre>
       * Sub Title of the banner.
       * </pre>
       *
       * <code>optional string sub_title = 2;</code>
       * @return Whether the subTitle field is set.
       */
      public fun hasSubTitle(): kotlin.Boolean {
        return _builder.hasSubTitle()
      }

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class BodyParametersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <pre>
       * dynamic parameters with-in sub title to be filled by client.
       * </pre>
       *
       * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 3;</code>
       */
       public val bodyParameters: com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getBodyParametersList()
        )
      /**
       * <pre>
       * dynamic parameters with-in sub title to be filled by client.
       * </pre>
       *
       * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 3;</code>
       * @param value The bodyParameters to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addBodyParameters")
      public fun com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>.add(value: vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter) {
        _builder.addBodyParameters(value)
      }/**
       * <pre>
       * dynamic parameters with-in sub title to be filled by client.
       * </pre>
       *
       * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 3;</code>
       * @param value The bodyParameters to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignBodyParameters")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>.plusAssign(value: vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter) {
        add(value)
      }/**
       * <pre>
       * dynamic parameters with-in sub title to be filled by client.
       * </pre>
       *
       * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 3;</code>
       * @param values The bodyParameters to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllBodyParameters")
      public fun com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>.addAll(values: kotlin.collections.Iterable<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter>) {
        _builder.addAllBodyParameters(values)
      }/**
       * <pre>
       * dynamic parameters with-in sub title to be filled by client.
       * </pre>
       *
       * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 3;</code>
       * @param values The bodyParameters to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllBodyParameters")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>.plusAssign(values: kotlin.collections.Iterable<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter>) {
        addAll(values)
      }/**
       * <pre>
       * dynamic parameters with-in sub title to be filled by client.
       * </pre>
       *
       * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 3;</code>
       * @param index The index to set the value at.
       * @param value The bodyParameters to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setBodyParameters")
      public operator fun com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>.set(index: kotlin.Int, value: vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter) {
        _builder.setBodyParameters(index, value)
      }/**
       * <pre>
       * dynamic parameters with-in sub title to be filled by client.
       * </pre>
       *
       * <code>repeated .vault.banner_body_parameter.BannerBodyParameter body_parameters = 3;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearBodyParameters")
      public fun com.google.protobuf.kotlin.DslList<vault.banner_body_parameter.BannerBodyParameterOuterClass.BannerBodyParameter, BodyParametersProxy>.clear() {
        _builder.clearBodyParameters()
      }
      /**
       * <pre>
       * Assets for the banner.
       * </pre>
       *
       * <code>.vault.bannersv5.Banner.Content.Assets assets = 4;</code>
       */
      public var assets: vault.bannersv5.Bannersv5.Banner.Content.Assets
        @JvmName("getAssets")
        get() = _builder.getAssets()
        @JvmName("setAssets")
        set(value) {
          _builder.setAssets(value)
        }
      /**
       * <pre>
       * Assets for the banner.
       * </pre>
       *
       * <code>.vault.bannersv5.Banner.Content.Assets assets = 4;</code>
       */
      public fun clearAssets() {
        _builder.clearAssets()
      }
      /**
       * <pre>
       * Assets for the banner.
       * </pre>
       *
       * <code>.vault.bannersv5.Banner.Content.Assets assets = 4;</code>
       * @return Whether the assets field is set.
       */
      public fun hasAssets(): kotlin.Boolean {
        return _builder.hasAssets()
      }

      /**
       * <pre>
       * Hightlight type of the banner.
       * </pre>
       *
       * <code>optional .vault.bannersv5.Banner.Content.Highlight highlight = 5;</code>
       */
      public var highlight: vault.bannersv5.Bannersv5.Banner.Content.Highlight
        @JvmName("getHighlight")
        get() = _builder.getHighlight()
        @JvmName("setHighlight")
        set(value) {
          _builder.setHighlight(value)
        }
      /**
       * <pre>
       * Hightlight type of the banner.
       * </pre>
       *
       * <code>optional .vault.bannersv5.Banner.Content.Highlight highlight = 5;</code>
       */
      public fun clearHighlight() {
        _builder.clearHighlight()
      }
      /**
       * <pre>
       * Hightlight type of the banner.
       * </pre>
       *
       * <code>optional .vault.bannersv5.Banner.Content.Highlight highlight = 5;</code>
       * @return Whether the highlight field is set.
       */
      public fun hasHighlight(): kotlin.Boolean {
        return _builder.hasHighlight()
      }
    }
    @kotlin.jvm.JvmName("-initializeassets")
    public inline fun assets(block: vault.bannersv5.BannerKt.ContentKt.AssetsKt.Dsl.() -> kotlin.Unit): vault.bannersv5.Bannersv5.Banner.Content.Assets =
      vault.bannersv5.BannerKt.ContentKt.AssetsKt.Dsl._create(vault.bannersv5.Bannersv5.Banner.Content.Assets.newBuilder()).apply { block() }._build()
    public object AssetsKt {
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @com.google.protobuf.kotlin.ProtoDslMarker
      public class Dsl private constructor(
        private val _builder: vault.bannersv5.Bannersv5.Banner.Content.Assets.Builder
      ) {
        public companion object {
          @kotlin.jvm.JvmSynthetic
          @kotlin.PublishedApi
          internal fun _create(builder: vault.bannersv5.Bannersv5.Banner.Content.Assets.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): vault.bannersv5.Bannersv5.Banner.Content.Assets = _builder.build()

        /**
         * <code>.vault.media.Media bg_asset = 1;</code>
         */
        public var bgAsset: vault.media.MediaOuterClass.Media
          @JvmName("getBgAsset")
          get() = _builder.getBgAsset()
          @JvmName("setBgAsset")
          set(value) {
            _builder.setBgAsset(value)
          }
        /**
         * <code>.vault.media.Media bg_asset = 1;</code>
         */
        public fun clearBgAsset() {
          _builder.clearBgAsset()
        }
        /**
         * <code>.vault.media.Media bg_asset = 1;</code>
         * @return Whether the bgAsset field is set.
         */
        public fun hasBgAsset(): kotlin.Boolean {
          return _builder.hasBgAsset()
        }

        /**
         * <code>optional .vault.media.Media top_asset = 2;</code>
         */
        public var topAsset: vault.media.MediaOuterClass.Media
          @JvmName("getTopAsset")
          get() = _builder.getTopAsset()
          @JvmName("setTopAsset")
          set(value) {
            _builder.setTopAsset(value)
          }
        /**
         * <code>optional .vault.media.Media top_asset = 2;</code>
         */
        public fun clearTopAsset() {
          _builder.clearTopAsset()
        }
        /**
         * <code>optional .vault.media.Media top_asset = 2;</code>
         * @return Whether the topAsset field is set.
         */
        public fun hasTopAsset(): kotlin.Boolean {
          return _builder.hasTopAsset()
        }
        public val AssetsKt.Dsl.topAssetOrNull: vault.media.MediaOuterClass.Media?
          get() = _builder.topAssetOrNull
      }
    }
  }
}
public inline fun vault.bannersv5.Bannersv5.Banner.copy(block: vault.bannersv5.BannerKt.Dsl.() -> kotlin.Unit): vault.bannersv5.Bannersv5.Banner =
  vault.bannersv5.BannerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public inline fun vault.bannersv5.Bannersv5.Banner.Item.copy(block: vault.bannersv5.BannerKt.ItemKt.Dsl.() -> kotlin.Unit): vault.bannersv5.Bannersv5.Banner.Item =
  vault.bannersv5.BannerKt.ItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val vault.bannersv5.Bannersv5.Banner.ItemOrBuilder.contentOrNull: vault.bannersv5.Bannersv5.Banner.Content?
  get() = if (hasContent()) getContent() else null

val vault.bannersv5.Bannersv5.Banner.ItemOrBuilder.assetOrNull: vault.media.MediaOuterClass.Media?
  get() = if (hasAsset()) getAsset() else null

val vault.bannersv5.Bannersv5.Banner.ItemOrBuilder.ctaOrNull: vault.common.Cta.CTA?
  get() = if (hasCta()) getCta() else null

public inline fun vault.bannersv5.Bannersv5.Banner.Content.copy(block: vault.bannersv5.BannerKt.ContentKt.Dsl.() -> kotlin.Unit): vault.bannersv5.Bannersv5.Banner.Content =
  vault.bannersv5.BannerKt.ContentKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public inline fun vault.bannersv5.Bannersv5.Banner.Content.Assets.copy(block: vault.bannersv5.BannerKt.ContentKt.AssetsKt.Dsl.() -> kotlin.Unit): vault.bannersv5.Bannersv5.Banner.Content.Assets =
  vault.bannersv5.BannerKt.ContentKt.AssetsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val vault.bannersv5.Bannersv5.Banner.Content.AssetsOrBuilder.bgAssetOrNull: vault.media.MediaOuterClass.Media?
  get() = if (hasBgAsset()) getBgAsset() else null

val vault.bannersv5.Bannersv5.Banner.Content.AssetsOrBuilder.topAssetOrNull: vault.media.MediaOuterClass.Media?
  get() = if (hasTopAsset()) getTopAsset() else null

val vault.bannersv5.Bannersv5.Banner.ContentOrBuilder.assetsOrNull: vault.bannersv5.Bannersv5.Banner.Content.Assets?
  get() = if (hasAssets()) getAssets() else null

val vault.bannersv5.Bannersv5.BannerOrBuilder.itemOrNull: vault.bannersv5.Bannersv5.Banner.Item?
  get() = if (hasItem()) getItem() else null

