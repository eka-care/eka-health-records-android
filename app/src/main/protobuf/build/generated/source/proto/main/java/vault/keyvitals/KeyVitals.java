// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: key_vitals.proto

package vault.keyvitals;

public final class KeyVitals {
  private KeyVitals() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface KeyVitalsAPIResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vault.keyvitals.KeyVitalsAPIResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    java.util.List<vault.keyvitals.KeyVitals.KeyVital> 
        getVitalsList();
    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    vault.keyvitals.KeyVitals.KeyVital getVitals(int index);
    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    int getVitalsCount();
  }
  /**
   * <pre>
   * KeyVitalsAPIResponse represent API response of key vitals 
   * </pre>
   *
   * Protobuf type {@code vault.keyvitals.KeyVitalsAPIResponse}
   */
  public  static final class KeyVitalsAPIResponse extends
      com.google.protobuf.GeneratedMessageLite<
          KeyVitalsAPIResponse, KeyVitalsAPIResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:vault.keyvitals.KeyVitalsAPIResponse)
      KeyVitalsAPIResponseOrBuilder {
    private KeyVitalsAPIResponse() {
      vitals_ = emptyProtobufList();
    }
    public static final int VITALS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<vault.keyvitals.KeyVitals.KeyVital> vitals_;
    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    @java.lang.Override
    public java.util.List<vault.keyvitals.KeyVitals.KeyVital> getVitalsList() {
      return vitals_;
    }
    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    public java.util.List<? extends vault.keyvitals.KeyVitals.KeyVitalOrBuilder> 
        getVitalsOrBuilderList() {
      return vitals_;
    }
    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    @java.lang.Override
    public int getVitalsCount() {
      return vitals_.size();
    }
    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    @java.lang.Override
    public vault.keyvitals.KeyVitals.KeyVital getVitals(int index) {
      return vitals_.get(index);
    }
    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    public vault.keyvitals.KeyVitals.KeyVitalOrBuilder getVitalsOrBuilder(
        int index) {
      return vitals_.get(index);
    }
    private void ensureVitalsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<vault.keyvitals.KeyVitals.KeyVital> tmp = vitals_;
      if (!tmp.isModifiable()) {
        vitals_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    private void setVitals(
        int index, vault.keyvitals.KeyVitals.KeyVital value) {
      value.getClass();
  ensureVitalsIsMutable();
      vitals_.set(index, value);
    }
    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    private void addVitals(vault.keyvitals.KeyVitals.KeyVital value) {
      value.getClass();
  ensureVitalsIsMutable();
      vitals_.add(value);
    }
    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    private void addVitals(
        int index, vault.keyvitals.KeyVitals.KeyVital value) {
      value.getClass();
  ensureVitalsIsMutable();
      vitals_.add(index, value);
    }
    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    private void addAllVitals(
        java.lang.Iterable<? extends vault.keyvitals.KeyVitals.KeyVital> values) {
      ensureVitalsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, vitals_);
    }
    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    private void clearVitals() {
      vitals_ = emptyProtobufList();
    }
    /**
     * <pre>
     * key vitals.
     * </pre>
     *
     * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
     */
    private void removeVitals(int index) {
      ensureVitalsIsMutable();
      vitals_.remove(index);
    }

    public static vault.keyvitals.KeyVitals.KeyVitalsAPIResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static vault.keyvitals.KeyVitals.KeyVitalsAPIResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static vault.keyvitals.KeyVitals.KeyVitalsAPIResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static vault.keyvitals.KeyVitals.KeyVitalsAPIResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static vault.keyvitals.KeyVitals.KeyVitalsAPIResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static vault.keyvitals.KeyVitals.KeyVitalsAPIResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static vault.keyvitals.KeyVitals.KeyVitalsAPIResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static vault.keyvitals.KeyVitals.KeyVitalsAPIResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static vault.keyvitals.KeyVitals.KeyVitalsAPIResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static vault.keyvitals.KeyVitals.KeyVitalsAPIResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static vault.keyvitals.KeyVitals.KeyVitalsAPIResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static vault.keyvitals.KeyVitals.KeyVitalsAPIResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(vault.keyvitals.KeyVitals.KeyVitalsAPIResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * KeyVitalsAPIResponse represent API response of key vitals 
     * </pre>
     *
     * Protobuf type {@code vault.keyvitals.KeyVitalsAPIResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          vault.keyvitals.KeyVitals.KeyVitalsAPIResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:vault.keyvitals.KeyVitalsAPIResponse)
        vault.keyvitals.KeyVitals.KeyVitalsAPIResponseOrBuilder {
      // Construct using vault.keyvitals.KeyVitals.KeyVitalsAPIResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * key vitals.
       * </pre>
       *
       * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
       */
      @java.lang.Override
      public java.util.List<vault.keyvitals.KeyVitals.KeyVital> getVitalsList() {
        return java.util.Collections.unmodifiableList(
            instance.getVitalsList());
      }
      /**
       * <pre>
       * key vitals.
       * </pre>
       *
       * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
       */
      @java.lang.Override
      public int getVitalsCount() {
        return instance.getVitalsCount();
      }/**
       * <pre>
       * key vitals.
       * </pre>
       *
       * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
       */
      @java.lang.Override
      public vault.keyvitals.KeyVitals.KeyVital getVitals(int index) {
        return instance.getVitals(index);
      }
      /**
       * <pre>
       * key vitals.
       * </pre>
       *
       * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
       */
      public Builder setVitals(
          int index, vault.keyvitals.KeyVitals.KeyVital value) {
        copyOnWrite();
        instance.setVitals(index, value);
        return this;
      }
      /**
       * <pre>
       * key vitals.
       * </pre>
       *
       * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
       */
      public Builder setVitals(
          int index, vault.keyvitals.KeyVitals.KeyVital.Builder builderForValue) {
        copyOnWrite();
        instance.setVitals(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * key vitals.
       * </pre>
       *
       * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
       */
      public Builder addVitals(vault.keyvitals.KeyVitals.KeyVital value) {
        copyOnWrite();
        instance.addVitals(value);
        return this;
      }
      /**
       * <pre>
       * key vitals.
       * </pre>
       *
       * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
       */
      public Builder addVitals(
          int index, vault.keyvitals.KeyVitals.KeyVital value) {
        copyOnWrite();
        instance.addVitals(index, value);
        return this;
      }
      /**
       * <pre>
       * key vitals.
       * </pre>
       *
       * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
       */
      public Builder addVitals(
          vault.keyvitals.KeyVitals.KeyVital.Builder builderForValue) {
        copyOnWrite();
        instance.addVitals(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * key vitals.
       * </pre>
       *
       * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
       */
      public Builder addVitals(
          int index, vault.keyvitals.KeyVitals.KeyVital.Builder builderForValue) {
        copyOnWrite();
        instance.addVitals(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * key vitals.
       * </pre>
       *
       * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
       */
      public Builder addAllVitals(
          java.lang.Iterable<? extends vault.keyvitals.KeyVitals.KeyVital> values) {
        copyOnWrite();
        instance.addAllVitals(values);
        return this;
      }
      /**
       * <pre>
       * key vitals.
       * </pre>
       *
       * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
       */
      public Builder clearVitals() {
        copyOnWrite();
        instance.clearVitals();
        return this;
      }
      /**
       * <pre>
       * key vitals.
       * </pre>
       *
       * <code>repeated .vault.keyvitals.KeyVital vitals = 1;</code>
       */
      public Builder removeVitals(int index) {
        copyOnWrite();
        instance.removeVitals(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:vault.keyvitals.KeyVitalsAPIResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new vault.keyvitals.KeyVitals.KeyVitalsAPIResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "vitals_",
              vault.keyvitals.KeyVitals.KeyVital.class,
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0000\u0001\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<vault.keyvitals.KeyVitals.KeyVitalsAPIResponse> parser = PARSER;
          if (parser == null) {
            synchronized (vault.keyvitals.KeyVitals.KeyVitalsAPIResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<vault.keyvitals.KeyVitals.KeyVitalsAPIResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:vault.keyvitals.KeyVitalsAPIResponse)
    private static final vault.keyvitals.KeyVitals.KeyVitalsAPIResponse DEFAULT_INSTANCE;
    static {
      KeyVitalsAPIResponse defaultInstance = new KeyVitalsAPIResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        KeyVitalsAPIResponse.class, defaultInstance);
    }

    public static vault.keyvitals.KeyVitals.KeyVitalsAPIResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<KeyVitalsAPIResponse> PARSER;

    public static com.google.protobuf.Parser<KeyVitalsAPIResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface KeyVitalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vault.keyvitals.KeyVital)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Name of the vital.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of the vital.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Test EKA ID.
     * </pre>
     *
     * <code>string test_eka_id = 2;</code>
     * @return The testEkaId.
     */
    java.lang.String getTestEkaId();
    /**
     * <pre>
     * Test EKA ID.
     * </pre>
     *
     * <code>string test_eka_id = 2;</code>
     * @return The bytes for testEkaId.
     */
    com.google.protobuf.ByteString
        getTestEkaIdBytes();

    /**
     * <pre>
     * Value of the vital.
     * </pre>
     *
     * <code>optional .vault.keyvitals.KeyVital.Value value = 3;</code>
     * @return Whether the value field is set.
     */
    boolean hasValue();
    /**
     * <pre>
     * Value of the vital.
     * </pre>
     *
     * <code>optional .vault.keyvitals.KeyVital.Value value = 3;</code>
     * @return The value.
     */
    vault.keyvitals.KeyVitals.KeyVital.Value getValue();
  }
  /**
   * Protobuf type {@code vault.keyvitals.KeyVital}
   */
  public  static final class KeyVital extends
      com.google.protobuf.GeneratedMessageLite<
          KeyVital, KeyVital.Builder> implements
      // @@protoc_insertion_point(message_implements:vault.keyvitals.KeyVital)
      KeyVitalOrBuilder {
    private KeyVital() {
      name_ = "";
      testEkaId_ = "";
    }
    public interface ValueOrBuilder extends
        // @@protoc_insertion_point(interface_extends:vault.keyvitals.KeyVital.Value)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * Value of the vital.
       * </pre>
       *
       * <code>string value = 1;</code>
       * @return The value.
       */
      java.lang.String getValue();
      /**
       * <pre>
       * Value of the vital.
       * </pre>
       *
       * <code>string value = 1;</code>
       * @return The bytes for value.
       */
      com.google.protobuf.ByteString
          getValueBytes();

      /**
       * <pre>
       * Unit of the vital.
       * </pre>
       *
       * <code>optional string unit = 2;</code>
       * @return Whether the unit field is set.
       */
      boolean hasUnit();
      /**
       * <pre>
       * Unit of the vital.
       * </pre>
       *
       * <code>optional string unit = 2;</code>
       * @return The unit.
       */
      java.lang.String getUnit();
      /**
       * <pre>
       * Unit of the vital.
       * </pre>
       *
       * <code>optional string unit = 2;</code>
       * @return The bytes for unit.
       */
      com.google.protobuf.ByteString
          getUnitBytes();

      /**
       * <pre>
       * Interpretation of the reading.
       * </pre>
       *
       * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
       * @return Whether the resultId field is set.
       */
      boolean hasResultId();
      /**
       * <pre>
       * Interpretation of the reading.
       * </pre>
       *
       * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
       * @return The enum numeric value on the wire for resultId.
       */
      int getResultIdValue();
      /**
       * <pre>
       * Interpretation of the reading.
       * </pre>
       *
       * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
       * @return The resultId.
       */
      vault.vitals.InterpretationOuterClass.Interpretation getResultId();

      /**
       * <pre>
       * Date of the vital.
       * </pre>
       *
       * <code>string measured_at = 4;</code>
       * @return Whether the measuredAt field is set.
       */
      boolean hasMeasuredAt();
      /**
       * <pre>
       * Date of the vital.
       * </pre>
       *
       * <code>string measured_at = 4;</code>
       * @return The measuredAt.
       */
      java.lang.String getMeasuredAt();
      /**
       * <pre>
       * Date of the vital.
       * </pre>
       *
       * <code>string measured_at = 4;</code>
       * @return The bytes for measuredAt.
       */
      com.google.protobuf.ByteString
          getMeasuredAtBytes();

      /**
       * <pre>
       * Is the data old.
       * </pre>
       *
       * <code>bool is_old = 5;</code>
       * @return Whether the isOld field is set.
       */
      boolean hasIsOld();
      /**
       * <pre>
       * Is the data old.
       * </pre>
       *
       * <code>bool is_old = 5;</code>
       * @return The isOld.
       */
      boolean getIsOld();

      public vault.keyvitals.KeyVitals.KeyVital.Value.ResultCase getResultCase();
    }
    /**
     * Protobuf type {@code vault.keyvitals.KeyVital.Value}
     */
    public  static final class Value extends
        com.google.protobuf.GeneratedMessageLite<
            Value, Value.Builder> implements
        // @@protoc_insertion_point(message_implements:vault.keyvitals.KeyVital.Value)
        ValueOrBuilder {
      private Value() {
        value_ = "";
        unit_ = "";
      }
      private int bitField0_;
      private int resultCase_ = 0;
      private java.lang.Object result_;
      public enum ResultCase {
        MEASURED_AT(4),
        IS_OLD(5),
        RESULT_NOT_SET(0);
        private final int value;
        private ResultCase(int value) {
          this.value = value;
        }
        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ResultCase valueOf(int value) {
          return forNumber(value);
        }

        public static ResultCase forNumber(int value) {
          switch (value) {
            case 4: return MEASURED_AT;
            case 5: return IS_OLD;
            case 0: return RESULT_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      @java.lang.Override
      public ResultCase
      getResultCase() {
        return ResultCase.forNumber(
            resultCase_);
      }

      private void clearResult() {
        resultCase_ = 0;
        result_ = null;
      }

      public static final int VALUE_FIELD_NUMBER = 1;
      private java.lang.String value_;
      /**
       * <pre>
       * Value of the vital.
       * </pre>
       *
       * <code>string value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public java.lang.String getValue() {
        return value_;
      }
      /**
       * <pre>
       * Value of the vital.
       * </pre>
       *
       * <code>string value = 1;</code>
       * @return The bytes for value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getValueBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(value_);
      }
      /**
       * <pre>
       * Value of the vital.
       * </pre>
       *
       * <code>string value = 1;</code>
       * @param value The value to set.
       */
      private void setValue(
          java.lang.String value) {
        java.lang.Class<?> valueClass = value.getClass();
  
        value_ = value;
      }
      /**
       * <pre>
       * Value of the vital.
       * </pre>
       *
       * <code>string value = 1;</code>
       */
      private void clearValue() {
        
        value_ = getDefaultInstance().getValue();
      }
      /**
       * <pre>
       * Value of the vital.
       * </pre>
       *
       * <code>string value = 1;</code>
       * @param value The bytes for value to set.
       */
      private void setValueBytes(
          com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        value_ = value.toStringUtf8();
        
      }

      public static final int UNIT_FIELD_NUMBER = 2;
      private java.lang.String unit_;
      /**
       * <pre>
       * Unit of the vital.
       * </pre>
       *
       * <code>optional string unit = 2;</code>
       * @return Whether the unit field is set.
       */
      @java.lang.Override
      public boolean hasUnit() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Unit of the vital.
       * </pre>
       *
       * <code>optional string unit = 2;</code>
       * @return The unit.
       */
      @java.lang.Override
      public java.lang.String getUnit() {
        return unit_;
      }
      /**
       * <pre>
       * Unit of the vital.
       * </pre>
       *
       * <code>optional string unit = 2;</code>
       * @return The bytes for unit.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUnitBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(unit_);
      }
      /**
       * <pre>
       * Unit of the vital.
       * </pre>
       *
       * <code>optional string unit = 2;</code>
       * @param value The unit to set.
       */
      private void setUnit(
          java.lang.String value) {
        java.lang.Class<?> valueClass = value.getClass();
  bitField0_ |= 0x00000001;
        unit_ = value;
      }
      /**
       * <pre>
       * Unit of the vital.
       * </pre>
       *
       * <code>optional string unit = 2;</code>
       */
      private void clearUnit() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unit_ = getDefaultInstance().getUnit();
      }
      /**
       * <pre>
       * Unit of the vital.
       * </pre>
       *
       * <code>optional string unit = 2;</code>
       * @param value The bytes for unit to set.
       */
      private void setUnitBytes(
          com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        unit_ = value.toStringUtf8();
        bitField0_ |= 0x00000001;
      }

      public static final int RESULT_ID_FIELD_NUMBER = 3;
      private int resultId_;
      /**
       * <pre>
       * Interpretation of the reading.
       * </pre>
       *
       * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
       * @return Whether the resultId field is set.
       */
      @java.lang.Override
      public boolean hasResultId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Interpretation of the reading.
       * </pre>
       *
       * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
       * @return The enum numeric value on the wire for resultId.
       */
      @java.lang.Override
      public int getResultIdValue() {
        return resultId_;
      }
      /**
       * <pre>
       * Interpretation of the reading.
       * </pre>
       *
       * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
       * @return The resultId.
       */
      @java.lang.Override
      public vault.vitals.InterpretationOuterClass.Interpretation getResultId() {
        vault.vitals.InterpretationOuterClass.Interpretation result = vault.vitals.InterpretationOuterClass.Interpretation.forNumber(resultId_);
        return result == null ? vault.vitals.InterpretationOuterClass.Interpretation.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Interpretation of the reading.
       * </pre>
       *
       * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
       * @param value The enum numeric value on the wire for resultId to set.
       */
      private void setResultIdValue(int value) {
        bitField0_ |= 0x00000002;  resultId_ = value;
      }
      /**
       * <pre>
       * Interpretation of the reading.
       * </pre>
       *
       * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
       * @param value The resultId to set.
       */
      private void setResultId(vault.vitals.InterpretationOuterClass.Interpretation value) {
        resultId_ = value.getNumber();
        bitField0_ |= 0x00000002;
      }
      /**
       * <pre>
       * Interpretation of the reading.
       * </pre>
       *
       * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
       */
      private void clearResultId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        resultId_ = 0;
      }

      public static final int MEASURED_AT_FIELD_NUMBER = 4;
      /**
       * <pre>
       * Date of the vital.
       * </pre>
       *
       * <code>string measured_at = 4;</code>
       * @return Whether the measuredAt field is set.
       */
      @java.lang.Override
      public boolean hasMeasuredAt() {
        return resultCase_ == 4;
      }
      /**
       * <pre>
       * Date of the vital.
       * </pre>
       *
       * <code>string measured_at = 4;</code>
       * @return The measuredAt.
       */
      @java.lang.Override
      public java.lang.String getMeasuredAt() {
        java.lang.String ref = "";
        if (resultCase_ == 4) {
          ref = (java.lang.String) result_;
        }
        return ref;
      }
      /**
       * <pre>
       * Date of the vital.
       * </pre>
       *
       * <code>string measured_at = 4;</code>
       * @return The bytes for measuredAt.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMeasuredAtBytes() {
        java.lang.String ref = "";
        if (resultCase_ == 4) {
          ref = (java.lang.String) result_;
        }
        return com.google.protobuf.ByteString.copyFromUtf8(ref);
      }
      /**
       * <pre>
       * Date of the vital.
       * </pre>
       *
       * <code>string measured_at = 4;</code>
       * @param value The measuredAt to set.
       */
      private void setMeasuredAt(
          java.lang.String value) {
        java.lang.Class<?> valueClass = value.getClass();
  resultCase_ = 4;
        result_ = value;
      }
      /**
       * <pre>
       * Date of the vital.
       * </pre>
       *
       * <code>string measured_at = 4;</code>
       */
      private void clearMeasuredAt() {
        if (resultCase_ == 4) {
          resultCase_ = 0;
          result_ = null;
        }
      }
      /**
       * <pre>
       * Date of the vital.
       * </pre>
       *
       * <code>string measured_at = 4;</code>
       * @param value The bytes for measuredAt to set.
       */
      private void setMeasuredAtBytes(
          com.google.protobuf.ByteString value) {
        checkByteStringIsUtf8(value);
        result_ = value.toStringUtf8();
        resultCase_ = 4;
      }

      public static final int IS_OLD_FIELD_NUMBER = 5;
      /**
       * <pre>
       * Is the data old.
       * </pre>
       *
       * <code>bool is_old = 5;</code>
       * @return Whether the isOld field is set.
       */
      @java.lang.Override
      public boolean hasIsOld() {
        return resultCase_ == 5;
      }
      /**
       * <pre>
       * Is the data old.
       * </pre>
       *
       * <code>bool is_old = 5;</code>
       * @return The isOld.
       */
      @java.lang.Override
      public boolean getIsOld() {
        if (resultCase_ == 5) {
          return (java.lang.Boolean) result_;
        }
        return false;
      }
      /**
       * <pre>
       * Is the data old.
       * </pre>
       *
       * <code>bool is_old = 5;</code>
       * @param value The isOld to set.
       */
      private void setIsOld(boolean value) {
        resultCase_ = 5;
        result_ = value;
      }
      /**
       * <pre>
       * Is the data old.
       * </pre>
       *
       * <code>bool is_old = 5;</code>
       */
      private void clearIsOld() {
        if (resultCase_ == 5) {
          resultCase_ = 0;
          result_ = null;
        }
      }

      public static vault.keyvitals.KeyVitals.KeyVital.Value parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static vault.keyvitals.KeyVitals.KeyVital.Value parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static vault.keyvitals.KeyVitals.KeyVital.Value parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static vault.keyvitals.KeyVitals.KeyVital.Value parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static vault.keyvitals.KeyVitals.KeyVital.Value parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static vault.keyvitals.KeyVitals.KeyVital.Value parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static vault.keyvitals.KeyVitals.KeyVital.Value parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static vault.keyvitals.KeyVitals.KeyVital.Value parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static vault.keyvitals.KeyVitals.KeyVital.Value parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static vault.keyvitals.KeyVitals.KeyVital.Value parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static vault.keyvitals.KeyVitals.KeyVital.Value parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static vault.keyvitals.KeyVitals.KeyVital.Value parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(vault.keyvitals.KeyVitals.KeyVital.Value prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code vault.keyvitals.KeyVital.Value}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            vault.keyvitals.KeyVitals.KeyVital.Value, Builder> implements
          // @@protoc_insertion_point(builder_implements:vault.keyvitals.KeyVital.Value)
          vault.keyvitals.KeyVitals.KeyVital.ValueOrBuilder {
        // Construct using vault.keyvitals.KeyVitals.KeyVital.Value.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }

        @java.lang.Override
        public ResultCase
            getResultCase() {
          return instance.getResultCase();
        }

        public Builder clearResult() {
          copyOnWrite();
          instance.clearResult();
          return this;
        }


        /**
         * <pre>
         * Value of the vital.
         * </pre>
         *
         * <code>string value = 1;</code>
         * @return The value.
         */
        @java.lang.Override
        public java.lang.String getValue() {
          return instance.getValue();
        }
        /**
         * <pre>
         * Value of the vital.
         * </pre>
         *
         * <code>string value = 1;</code>
         * @return The bytes for value.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getValueBytes() {
          return instance.getValueBytes();
        }
        /**
         * <pre>
         * Value of the vital.
         * </pre>
         *
         * <code>string value = 1;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(
            java.lang.String value) {
          copyOnWrite();
          instance.setValue(value);
          return this;
        }
        /**
         * <pre>
         * Value of the vital.
         * </pre>
         *
         * <code>string value = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          copyOnWrite();
          instance.clearValue();
          return this;
        }
        /**
         * <pre>
         * Value of the vital.
         * </pre>
         *
         * <code>string value = 1;</code>
         * @param value The bytes for value to set.
         * @return This builder for chaining.
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setValueBytes(value);
          return this;
        }

        /**
         * <pre>
         * Unit of the vital.
         * </pre>
         *
         * <code>optional string unit = 2;</code>
         * @return Whether the unit field is set.
         */
        @java.lang.Override
        public boolean hasUnit() {
          return instance.hasUnit();
        }
        /**
         * <pre>
         * Unit of the vital.
         * </pre>
         *
         * <code>optional string unit = 2;</code>
         * @return The unit.
         */
        @java.lang.Override
        public java.lang.String getUnit() {
          return instance.getUnit();
        }
        /**
         * <pre>
         * Unit of the vital.
         * </pre>
         *
         * <code>optional string unit = 2;</code>
         * @return The bytes for unit.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getUnitBytes() {
          return instance.getUnitBytes();
        }
        /**
         * <pre>
         * Unit of the vital.
         * </pre>
         *
         * <code>optional string unit = 2;</code>
         * @param value The unit to set.
         * @return This builder for chaining.
         */
        public Builder setUnit(
            java.lang.String value) {
          copyOnWrite();
          instance.setUnit(value);
          return this;
        }
        /**
         * <pre>
         * Unit of the vital.
         * </pre>
         *
         * <code>optional string unit = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearUnit() {
          copyOnWrite();
          instance.clearUnit();
          return this;
        }
        /**
         * <pre>
         * Unit of the vital.
         * </pre>
         *
         * <code>optional string unit = 2;</code>
         * @param value The bytes for unit to set.
         * @return This builder for chaining.
         */
        public Builder setUnitBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setUnitBytes(value);
          return this;
        }

        /**
         * <pre>
         * Interpretation of the reading.
         * </pre>
         *
         * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
         * @return Whether the resultId field is set.
         */
        @java.lang.Override
        public boolean hasResultId() {
          return instance.hasResultId();
        }
        /**
         * <pre>
         * Interpretation of the reading.
         * </pre>
         *
         * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
         * @return The enum numeric value on the wire for resultId.
         */
        @java.lang.Override
        public int getResultIdValue() {
          return instance.getResultIdValue();
        }
        /**
         * <pre>
         * Interpretation of the reading.
         * </pre>
         *
         * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
         * @param value The resultId to set.
         * @return This builder for chaining.
         */
        public Builder setResultIdValue(int value) {
          copyOnWrite();
          instance.setResultIdValue(value);
          return this;
        }
        /**
         * <pre>
         * Interpretation of the reading.
         * </pre>
         *
         * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
         * @return The resultId.
         */
        @java.lang.Override
        public vault.vitals.InterpretationOuterClass.Interpretation getResultId() {
          return instance.getResultId();
        }
        /**
         * <pre>
         * Interpretation of the reading.
         * </pre>
         *
         * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
         * @param value The enum numeric value on the wire for resultId to set.
         * @return This builder for chaining.
         */
        public Builder setResultId(vault.vitals.InterpretationOuterClass.Interpretation value) {
          copyOnWrite();
          instance.setResultId(value);
          return this;
        }
        /**
         * <pre>
         * Interpretation of the reading.
         * </pre>
         *
         * <code>optional .vault.vitals.Interpretation result_id = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearResultId() {
          copyOnWrite();
          instance.clearResultId();
          return this;
        }

        /**
         * <pre>
         * Date of the vital.
         * </pre>
         *
         * <code>string measured_at = 4;</code>
         * @return Whether the measuredAt field is set.
         */
        @java.lang.Override
        public boolean hasMeasuredAt() {
          return instance.hasMeasuredAt();
        }
        /**
         * <pre>
         * Date of the vital.
         * </pre>
         *
         * <code>string measured_at = 4;</code>
         * @return The measuredAt.
         */
        @java.lang.Override
        public java.lang.String getMeasuredAt() {
          return instance.getMeasuredAt();
        }
        /**
         * <pre>
         * Date of the vital.
         * </pre>
         *
         * <code>string measured_at = 4;</code>
         * @return The bytes for measuredAt.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getMeasuredAtBytes() {
          return instance.getMeasuredAtBytes();
        }
        /**
         * <pre>
         * Date of the vital.
         * </pre>
         *
         * <code>string measured_at = 4;</code>
         * @param value The measuredAt to set.
         * @return This builder for chaining.
         */
        public Builder setMeasuredAt(
            java.lang.String value) {
          copyOnWrite();
          instance.setMeasuredAt(value);
          return this;
        }
        /**
         * <pre>
         * Date of the vital.
         * </pre>
         *
         * <code>string measured_at = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearMeasuredAt() {
          copyOnWrite();
          instance.clearMeasuredAt();
          return this;
        }
        /**
         * <pre>
         * Date of the vital.
         * </pre>
         *
         * <code>string measured_at = 4;</code>
         * @param value The bytes for measuredAt to set.
         * @return This builder for chaining.
         */
        public Builder setMeasuredAtBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setMeasuredAtBytes(value);
          return this;
        }

        /**
         * <pre>
         * Is the data old.
         * </pre>
         *
         * <code>bool is_old = 5;</code>
         * @return Whether the isOld field is set.
         */
        @java.lang.Override
        public boolean hasIsOld() {
          return instance.hasIsOld();
        }
        /**
         * <pre>
         * Is the data old.
         * </pre>
         *
         * <code>bool is_old = 5;</code>
         * @return The isOld.
         */
        @java.lang.Override
        public boolean getIsOld() {
          return instance.getIsOld();
        }
        /**
         * <pre>
         * Is the data old.
         * </pre>
         *
         * <code>bool is_old = 5;</code>
         * @param value The isOld to set.
         * @return This builder for chaining.
         */
        public Builder setIsOld(boolean value) {
          copyOnWrite();
          instance.setIsOld(value);
          return this;
        }
        /**
         * <pre>
         * Is the data old.
         * </pre>
         *
         * <code>bool is_old = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsOld() {
          copyOnWrite();
          instance.clearIsOld();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:vault.keyvitals.KeyVital.Value)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new vault.keyvitals.KeyVitals.KeyVital.Value();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "result_",
                "resultCase_",
                "bitField0_",
                "value_",
                "unit_",
                "resultId_",
              };
              java.lang.String info =
                  "\u0000\u0005\u0001\u0001\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u0208\u0002\u1208" +
                  "\u0000\u0003\u100c\u0001\u0004\u023b\u0000\u0005:\u0000";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<vault.keyvitals.KeyVitals.KeyVital.Value> parser = PARSER;
            if (parser == null) {
              synchronized (vault.keyvitals.KeyVitals.KeyVital.Value.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<vault.keyvitals.KeyVitals.KeyVital.Value>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:vault.keyvitals.KeyVital.Value)
      private static final vault.keyvitals.KeyVitals.KeyVital.Value DEFAULT_INSTANCE;
      static {
        Value defaultInstance = new Value();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Value.class, defaultInstance);
      }

      public static vault.keyvitals.KeyVitals.KeyVital.Value getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Value> PARSER;

      public static com.google.protobuf.Parser<Value> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.String name_;
    /**
     * <pre>
     * Name of the vital.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <pre>
     * Name of the vital.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <pre>
     * Name of the vital.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     */
    private void setName(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      name_ = value;
    }
    /**
     * <pre>
     * Name of the vital.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private void clearName() {
      
      name_ = getDefaultInstance().getName();
    }
    /**
     * <pre>
     * Name of the vital.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      name_ = value.toStringUtf8();
      
    }

    public static final int TEST_EKA_ID_FIELD_NUMBER = 2;
    private java.lang.String testEkaId_;
    /**
     * <pre>
     * Test EKA ID.
     * </pre>
     *
     * <code>string test_eka_id = 2;</code>
     * @return The testEkaId.
     */
    @java.lang.Override
    public java.lang.String getTestEkaId() {
      return testEkaId_;
    }
    /**
     * <pre>
     * Test EKA ID.
     * </pre>
     *
     * <code>string test_eka_id = 2;</code>
     * @return The bytes for testEkaId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTestEkaIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(testEkaId_);
    }
    /**
     * <pre>
     * Test EKA ID.
     * </pre>
     *
     * <code>string test_eka_id = 2;</code>
     * @param value The testEkaId to set.
     */
    private void setTestEkaId(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      testEkaId_ = value;
    }
    /**
     * <pre>
     * Test EKA ID.
     * </pre>
     *
     * <code>string test_eka_id = 2;</code>
     */
    private void clearTestEkaId() {
      
      testEkaId_ = getDefaultInstance().getTestEkaId();
    }
    /**
     * <pre>
     * Test EKA ID.
     * </pre>
     *
     * <code>string test_eka_id = 2;</code>
     * @param value The bytes for testEkaId to set.
     */
    private void setTestEkaIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      testEkaId_ = value.toStringUtf8();
      
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private vault.keyvitals.KeyVitals.KeyVital.Value value_;
    /**
     * <pre>
     * Value of the vital.
     * </pre>
     *
     * <code>optional .vault.keyvitals.KeyVital.Value value = 3;</code>
     */
    @java.lang.Override
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Value of the vital.
     * </pre>
     *
     * <code>optional .vault.keyvitals.KeyVital.Value value = 3;</code>
     */
    @java.lang.Override
    public vault.keyvitals.KeyVitals.KeyVital.Value getValue() {
      return value_ == null ? vault.keyvitals.KeyVitals.KeyVital.Value.getDefaultInstance() : value_;
    }
    /**
     * <pre>
     * Value of the vital.
     * </pre>
     *
     * <code>optional .vault.keyvitals.KeyVital.Value value = 3;</code>
     */
    private void setValue(vault.keyvitals.KeyVitals.KeyVital.Value value) {
      value.getClass();
  value_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * Value of the vital.
     * </pre>
     *
     * <code>optional .vault.keyvitals.KeyVital.Value value = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeValue(vault.keyvitals.KeyVitals.KeyVital.Value value) {
      value.getClass();
  if (value_ != null &&
          value_ != vault.keyvitals.KeyVitals.KeyVital.Value.getDefaultInstance()) {
        value_ =
          vault.keyvitals.KeyVitals.KeyVital.Value.newBuilder(value_).mergeFrom(value).buildPartial();
      } else {
        value_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Value of the vital.
     * </pre>
     *
     * <code>optional .vault.keyvitals.KeyVital.Value value = 3;</code>
     */
    private void clearValue() {  value_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static vault.keyvitals.KeyVitals.KeyVital parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static vault.keyvitals.KeyVitals.KeyVital parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static vault.keyvitals.KeyVitals.KeyVital parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static vault.keyvitals.KeyVitals.KeyVital parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static vault.keyvitals.KeyVitals.KeyVital parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static vault.keyvitals.KeyVitals.KeyVital parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static vault.keyvitals.KeyVitals.KeyVital parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static vault.keyvitals.KeyVitals.KeyVital parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static vault.keyvitals.KeyVitals.KeyVital parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static vault.keyvitals.KeyVitals.KeyVital parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static vault.keyvitals.KeyVitals.KeyVital parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static vault.keyvitals.KeyVitals.KeyVital parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(vault.keyvitals.KeyVitals.KeyVital prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code vault.keyvitals.KeyVital}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          vault.keyvitals.KeyVitals.KeyVital, Builder> implements
        // @@protoc_insertion_point(builder_implements:vault.keyvitals.KeyVital)
        vault.keyvitals.KeyVitals.KeyVitalOrBuilder {
      // Construct using vault.keyvitals.KeyVitals.KeyVital.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Name of the vital.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <pre>
       * Name of the vital.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <pre>
       * Name of the vital.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <pre>
       * Name of the vital.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <pre>
       * Name of the vital.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * Test EKA ID.
       * </pre>
       *
       * <code>string test_eka_id = 2;</code>
       * @return The testEkaId.
       */
      @java.lang.Override
      public java.lang.String getTestEkaId() {
        return instance.getTestEkaId();
      }
      /**
       * <pre>
       * Test EKA ID.
       * </pre>
       *
       * <code>string test_eka_id = 2;</code>
       * @return The bytes for testEkaId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTestEkaIdBytes() {
        return instance.getTestEkaIdBytes();
      }
      /**
       * <pre>
       * Test EKA ID.
       * </pre>
       *
       * <code>string test_eka_id = 2;</code>
       * @param value The testEkaId to set.
       * @return This builder for chaining.
       */
      public Builder setTestEkaId(
          java.lang.String value) {
        copyOnWrite();
        instance.setTestEkaId(value);
        return this;
      }
      /**
       * <pre>
       * Test EKA ID.
       * </pre>
       *
       * <code>string test_eka_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTestEkaId() {
        copyOnWrite();
        instance.clearTestEkaId();
        return this;
      }
      /**
       * <pre>
       * Test EKA ID.
       * </pre>
       *
       * <code>string test_eka_id = 2;</code>
       * @param value The bytes for testEkaId to set.
       * @return This builder for chaining.
       */
      public Builder setTestEkaIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTestEkaIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * Value of the vital.
       * </pre>
       *
       * <code>optional .vault.keyvitals.KeyVital.Value value = 3;</code>
       */
      @java.lang.Override
      public boolean hasValue() {
        return instance.hasValue();
      }
      /**
       * <pre>
       * Value of the vital.
       * </pre>
       *
       * <code>optional .vault.keyvitals.KeyVital.Value value = 3;</code>
       */
      @java.lang.Override
      public vault.keyvitals.KeyVitals.KeyVital.Value getValue() {
        return instance.getValue();
      }
      /**
       * <pre>
       * Value of the vital.
       * </pre>
       *
       * <code>optional .vault.keyvitals.KeyVital.Value value = 3;</code>
       */
      public Builder setValue(vault.keyvitals.KeyVitals.KeyVital.Value value) {
        copyOnWrite();
        instance.setValue(value);
        return this;
        }
      /**
       * <pre>
       * Value of the vital.
       * </pre>
       *
       * <code>optional .vault.keyvitals.KeyVital.Value value = 3;</code>
       */
      public Builder setValue(
          vault.keyvitals.KeyVitals.KeyVital.Value.Builder builderForValue) {
        copyOnWrite();
        instance.setValue(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Value of the vital.
       * </pre>
       *
       * <code>optional .vault.keyvitals.KeyVital.Value value = 3;</code>
       */
      public Builder mergeValue(vault.keyvitals.KeyVitals.KeyVital.Value value) {
        copyOnWrite();
        instance.mergeValue(value);
        return this;
      }
      /**
       * <pre>
       * Value of the vital.
       * </pre>
       *
       * <code>optional .vault.keyvitals.KeyVital.Value value = 3;</code>
       */
      public Builder clearValue() {  copyOnWrite();
        instance.clearValue();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:vault.keyvitals.KeyVital)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new vault.keyvitals.KeyVitals.KeyVital();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "name_",
              "testEkaId_",
              "value_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
                "\u0003\u1009\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<vault.keyvitals.KeyVitals.KeyVital> parser = PARSER;
          if (parser == null) {
            synchronized (vault.keyvitals.KeyVitals.KeyVital.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<vault.keyvitals.KeyVitals.KeyVital>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:vault.keyvitals.KeyVital)
    private static final vault.keyvitals.KeyVitals.KeyVital DEFAULT_INSTANCE;
    static {
      KeyVital defaultInstance = new KeyVital();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        KeyVital.class, defaultInstance);
    }

    public static vault.keyvitals.KeyVitals.KeyVital getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<KeyVital> PARSER;

    public static com.google.protobuf.Parser<KeyVital> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
