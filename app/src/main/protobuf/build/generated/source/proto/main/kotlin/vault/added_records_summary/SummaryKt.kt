//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: added_records_summary.proto

package vault.added_records_summary;

@kotlin.jvm.JvmName("-initializesummary")
public inline fun summary(block: vault.added_records_summary.SummaryKt.Dsl.() -> kotlin.Unit): vault.added_records_summary.AddedRecordsSummary.Summary =
  vault.added_records_summary.SummaryKt.Dsl._create(vault.added_records_summary.AddedRecordsSummary.Summary.newBuilder()).apply { block() }._build()
public object SummaryKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vault.added_records_summary.AddedRecordsSummary.Summary.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vault.added_records_summary.AddedRecordsSummary.Summary.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vault.added_records_summary.AddedRecordsSummary.Summary = _builder.build()

    /**
     * <pre>
     * Vitals related info.
     * </pre>
     *
     * <code>optional .vault.added_records_summary.Summary.VitalsInfo vitals_info = 1;</code>
     */
    public var vitalsInfo: vault.added_records_summary.AddedRecordsSummary.Summary.VitalsInfo
      @JvmName("getVitalsInfo")
      get() = _builder.getVitalsInfo()
      @JvmName("setVitalsInfo")
      set(value) {
        _builder.setVitalsInfo(value)
      }
    /**
     * <pre>
     * Vitals related info.
     * </pre>
     *
     * <code>optional .vault.added_records_summary.Summary.VitalsInfo vitals_info = 1;</code>
     */
    public fun clearVitalsInfo() {
      _builder.clearVitalsInfo()
    }
    /**
     * <pre>
     * Vitals related info.
     * </pre>
     *
     * <code>optional .vault.added_records_summary.Summary.VitalsInfo vitals_info = 1;</code>
     * @return Whether the vitalsInfo field is set.
     */
    public fun hasVitalsInfo(): kotlin.Boolean {
      return _builder.hasVitalsInfo()
    }
    public val SummaryKt.Dsl.vitalsInfoOrNull: vault.added_records_summary.AddedRecordsSummary.Summary.VitalsInfo?
      get() = _builder.vitalsInfoOrNull

    /**
     * <pre>
     * Total number of documents uploaded.
     * </pre>
     *
     * <code>uint32 records_count = 2;</code>
     */
    public var recordsCount: kotlin.Int
      @JvmName("getRecordsCount")
      get() = _builder.getRecordsCount()
      @JvmName("setRecordsCount")
      set(value) {
        _builder.setRecordsCount(value)
      }
    /**
     * <pre>
     * Total number of documents uploaded.
     * </pre>
     *
     * <code>uint32 records_count = 2;</code>
     */
    public fun clearRecordsCount() {
      _builder.clearRecordsCount()
    }
  }
  @kotlin.jvm.JvmName("-initializevitalsInfo")
  public inline fun vitalsInfo(block: vault.added_records_summary.SummaryKt.VitalsInfoKt.Dsl.() -> kotlin.Unit): vault.added_records_summary.AddedRecordsSummary.Summary.VitalsInfo =
    vault.added_records_summary.SummaryKt.VitalsInfoKt.Dsl._create(vault.added_records_summary.AddedRecordsSummary.Summary.VitalsInfo.newBuilder()).apply { block() }._build()
  public object VitalsInfoKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: vault.added_records_summary.AddedRecordsSummary.Summary.VitalsInfo.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: vault.added_records_summary.AddedRecordsSummary.Summary.VitalsInfo.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): vault.added_records_summary.AddedRecordsSummary.Summary.VitalsInfo = _builder.build()

      /**
       * <pre>
       * Total vitals found for current upload.
       * </pre>
       *
       * <code>uint32 vitals_found = 1;</code>
       */
      public var vitalsFound: kotlin.Int
        @JvmName("getVitalsFound")
        get() = _builder.getVitalsFound()
        @JvmName("setVitalsFound")
        set(value) {
          _builder.setVitalsFound(value)
        }
      /**
       * <pre>
       * Total vitals found for current upload.
       * </pre>
       *
       * <code>uint32 vitals_found = 1;</code>
       */
      public fun clearVitalsFound() {
        _builder.clearVitalsFound()
      }

      /**
       * <pre>
       * Concerned vitals.
       * </pre>
       *
       * <code>optional uint32 concerns = 2;</code>
       */
      public var concerns: kotlin.Int
        @JvmName("getConcerns")
        get() = _builder.getConcerns()
        @JvmName("setConcerns")
        set(value) {
          _builder.setConcerns(value)
        }
      /**
       * <pre>
       * Concerned vitals.
       * </pre>
       *
       * <code>optional uint32 concerns = 2;</code>
       */
      public fun clearConcerns() {
        _builder.clearConcerns()
      }
      /**
       * <pre>
       * Concerned vitals.
       * </pre>
       *
       * <code>optional uint32 concerns = 2;</code>
       * @return Whether the concerns field is set.
       */
      public fun hasConcerns(): kotlin.Boolean {
        return _builder.hasConcerns()
      }

      /**
       * <pre>
       * Trends updated count.
       * </pre>
       *
       * <code>optional uint32 trends_updated = 3;</code>
       */
      public var trendsUpdated: kotlin.Int
        @JvmName("getTrendsUpdated")
        get() = _builder.getTrendsUpdated()
        @JvmName("setTrendsUpdated")
        set(value) {
          _builder.setTrendsUpdated(value)
        }
      /**
       * <pre>
       * Trends updated count.
       * </pre>
       *
       * <code>optional uint32 trends_updated = 3;</code>
       */
      public fun clearTrendsUpdated() {
        _builder.clearTrendsUpdated()
      }
      /**
       * <pre>
       * Trends updated count.
       * </pre>
       *
       * <code>optional uint32 trends_updated = 3;</code>
       * @return Whether the trendsUpdated field is set.
       */
      public fun hasTrendsUpdated(): kotlin.Boolean {
        return _builder.hasTrendsUpdated()
      }

      /**
       * <pre>
       * Latest added trends from current upload.
       * </pre>
       *
       * <code>optional uint32 latest_added = 4;</code>
       */
      public var latestAdded: kotlin.Int
        @JvmName("getLatestAdded")
        get() = _builder.getLatestAdded()
        @JvmName("setLatestAdded")
        set(value) {
          _builder.setLatestAdded(value)
        }
      /**
       * <pre>
       * Latest added trends from current upload.
       * </pre>
       *
       * <code>optional uint32 latest_added = 4;</code>
       */
      public fun clearLatestAdded() {
        _builder.clearLatestAdded()
      }
      /**
       * <pre>
       * Latest added trends from current upload.
       * </pre>
       *
       * <code>optional uint32 latest_added = 4;</code>
       * @return Whether the latestAdded field is set.
       */
      public fun hasLatestAdded(): kotlin.Boolean {
        return _builder.hasLatestAdded()
      }
    }
  }
}
public inline fun vault.added_records_summary.AddedRecordsSummary.Summary.copy(block: vault.added_records_summary.SummaryKt.Dsl.() -> kotlin.Unit): vault.added_records_summary.AddedRecordsSummary.Summary =
  vault.added_records_summary.SummaryKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public inline fun vault.added_records_summary.AddedRecordsSummary.Summary.VitalsInfo.copy(block: vault.added_records_summary.SummaryKt.VitalsInfoKt.Dsl.() -> kotlin.Unit): vault.added_records_summary.AddedRecordsSummary.Summary.VitalsInfo =
  vault.added_records_summary.SummaryKt.VitalsInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val vault.added_records_summary.AddedRecordsSummary.SummaryOrBuilder.vitalsInfoOrNull: vault.added_records_summary.AddedRecordsSummary.Summary.VitalsInfo?
  get() = if (hasVitalsInfo()) getVitalsInfo() else null

