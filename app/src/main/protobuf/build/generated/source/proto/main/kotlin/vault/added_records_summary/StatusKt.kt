//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: added_records_summary.proto

package vault.added_records_summary;

@kotlin.jvm.JvmName("-initializestatus")
public inline fun status(block: vault.added_records_summary.StatusKt.Dsl.() -> kotlin.Unit): vault.added_records_summary.AddedRecordsSummary.Status =
  vault.added_records_summary.StatusKt.Dsl._create(vault.added_records_summary.AddedRecordsSummary.Status.newBuilder()).apply { block() }._build()
public object StatusKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vault.added_records_summary.AddedRecordsSummary.Status.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vault.added_records_summary.AddedRecordsSummary.Status.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vault.added_records_summary.AddedRecordsSummary.Status = _builder.build()

    /**
     * <pre>
     * Secure backup has started.
     * </pre>
     *
     * <code>.vault.added_records_summary.SyncRecords sync_records = 1;</code>
     */
    public var syncRecords: vault.added_records_summary.AddedRecordsSummary.SyncRecords
      @JvmName("getSyncRecords")
      get() = _builder.getSyncRecords()
      @JvmName("setSyncRecords")
      set(value) {
        _builder.setSyncRecords(value)
      }
    /**
     * <pre>
     * Secure backup has started.
     * </pre>
     *
     * <code>.vault.added_records_summary.SyncRecords sync_records = 1;</code>
     */
    public fun clearSyncRecords() {
      _builder.clearSyncRecords()
    }
    /**
     * <pre>
     * Secure backup has started.
     * </pre>
     *
     * <code>.vault.added_records_summary.SyncRecords sync_records = 1;</code>
     * @return Whether the syncRecords field is set.
     */
    public fun hasSyncRecords(): kotlin.Boolean {
      return _builder.hasSyncRecords()
    }

    /**
     * <pre>
     * Analyzing your health records (X).
     * </pre>
     *
     * <code>.vault.added_records_summary.AnalyzingRecords analyzing_records = 2;</code>
     */
    public var analyzingRecords: vault.added_records_summary.AddedRecordsSummary.AnalyzingRecords
      @JvmName("getAnalyzingRecords")
      get() = _builder.getAnalyzingRecords()
      @JvmName("setAnalyzingRecords")
      set(value) {
        _builder.setAnalyzingRecords(value)
      }
    /**
     * <pre>
     * Analyzing your health records (X).
     * </pre>
     *
     * <code>.vault.added_records_summary.AnalyzingRecords analyzing_records = 2;</code>
     */
    public fun clearAnalyzingRecords() {
      _builder.clearAnalyzingRecords()
    }
    /**
     * <pre>
     * Analyzing your health records (X).
     * </pre>
     *
     * <code>.vault.added_records_summary.AnalyzingRecords analyzing_records = 2;</code>
     * @return Whether the analyzingRecords field is set.
     */
    public fun hasAnalyzingRecords(): kotlin.Boolean {
      return _builder.hasAnalyzingRecords()
    }

    /**
     * <pre>
     * Making it simpler to see your health.
     * </pre>
     *
     * <code>.vault.added_records_summary.EndState end_state = 3;</code>
     */
    public var endState: vault.added_records_summary.AddedRecordsSummary.EndState
      @JvmName("getEndState")
      get() = _builder.getEndState()
      @JvmName("setEndState")
      set(value) {
        _builder.setEndState(value)
      }
    /**
     * <pre>
     * Making it simpler to see your health.
     * </pre>
     *
     * <code>.vault.added_records_summary.EndState end_state = 3;</code>
     */
    public fun clearEndState() {
      _builder.clearEndState()
    }
    /**
     * <pre>
     * Making it simpler to see your health.
     * </pre>
     *
     * <code>.vault.added_records_summary.EndState end_state = 3;</code>
     * @return Whether the endState field is set.
     */
    public fun hasEndState(): kotlin.Boolean {
      return _builder.hasEndState()
    }
    public val responseCase: vault.added_records_summary.AddedRecordsSummary.Status.ResponseCase
      @JvmName("getResponseCase")
      get() = _builder.getResponseCase()

    public fun clearResponse() {
      _builder.clearResponse()
    }
  }
}
public inline fun vault.added_records_summary.AddedRecordsSummary.Status.copy(block: vault.added_records_summary.StatusKt.Dsl.() -> kotlin.Unit): vault.added_records_summary.AddedRecordsSummary.Status =
  vault.added_records_summary.StatusKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val vault.added_records_summary.AddedRecordsSummary.StatusOrBuilder.syncRecordsOrNull: vault.added_records_summary.AddedRecordsSummary.SyncRecords?
  get() = if (hasSyncRecords()) getSyncRecords() else null

val vault.added_records_summary.AddedRecordsSummary.StatusOrBuilder.analyzingRecordsOrNull: vault.added_records_summary.AddedRecordsSummary.AnalyzingRecords?
  get() = if (hasAnalyzingRecords()) getAnalyzingRecords() else null

val vault.added_records_summary.AddedRecordsSummary.StatusOrBuilder.endStateOrNull: vault.added_records_summary.AddedRecordsSummary.EndState?
  get() = if (hasEndState()) getEndState() else null

