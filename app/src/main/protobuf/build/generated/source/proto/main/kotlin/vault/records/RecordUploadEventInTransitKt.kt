//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: records.proto

package vault.records;

@kotlin.jvm.JvmName("-initializerecordUploadEventInTransit")
public inline fun recordUploadEventInTransit(block: vault.records.RecordUploadEventInTransitKt.Dsl.() -> kotlin.Unit): vault.records.Records.RecordUploadEventInTransit =
  vault.records.RecordUploadEventInTransitKt.Dsl._create(vault.records.Records.RecordUploadEventInTransit.newBuilder()).apply { block() }._build()
public object RecordUploadEventInTransitKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vault.records.Records.RecordUploadEventInTransit.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vault.records.Records.RecordUploadEventInTransit.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vault.records.Records.RecordUploadEventInTransit = _builder.build()
  }
}
public inline fun vault.records.Records.RecordUploadEventInTransit.copy(block: vault.records.RecordUploadEventInTransitKt.Dsl.() -> kotlin.Unit): vault.records.Records.RecordUploadEventInTransit =
  vault.records.RecordUploadEventInTransitKt.Dsl._create(this.toBuilder()).apply { block() }._build()

