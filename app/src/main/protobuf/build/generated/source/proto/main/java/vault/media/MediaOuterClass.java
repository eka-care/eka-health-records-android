// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: media.proto

package vault.media;

public final class MediaOuterClass {
  private MediaOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MediaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vault.media.Media)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string image = 1;</code>
     * @return Whether the image field is set.
     */
    boolean hasImage();
    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string image = 1;</code>
     * @return The image.
     */
    java.lang.String getImage();
    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string image = 1;</code>
     * @return The bytes for image.
     */
    com.google.protobuf.ByteString
        getImageBytes();

    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 2;</code>
     * @return Whether the lottie field is set.
     */
    boolean hasLottie();
    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 2;</code>
     * @return The lottie.
     */
    java.lang.String getLottie();
    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 2;</code>
     * @return The bytes for lottie.
     */
    com.google.protobuf.ByteString
        getLottieBytes();

    public vault.media.MediaOuterClass.Media.AssetCase getAssetCase();
  }
  /**
   * Protobuf type {@code vault.media.Media}
   */
  public  static final class Media extends
      com.google.protobuf.GeneratedMessageLite<
          Media, Media.Builder> implements
      // @@protoc_insertion_point(message_implements:vault.media.Media)
      MediaOrBuilder {
    private Media() {
    }
    private int assetCase_ = 0;
    private java.lang.Object asset_;
    public enum AssetCase {
      IMAGE(1),
      LOTTIE(2),
      ASSET_NOT_SET(0);
      private final int value;
      private AssetCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AssetCase valueOf(int value) {
        return forNumber(value);
      }

      public static AssetCase forNumber(int value) {
        switch (value) {
          case 1: return IMAGE;
          case 2: return LOTTIE;
          case 0: return ASSET_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    @java.lang.Override
    public AssetCase
    getAssetCase() {
      return AssetCase.forNumber(
          assetCase_);
    }

    private void clearAsset() {
      assetCase_ = 0;
      asset_ = null;
    }

    public static final int IMAGE_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string image = 1;</code>
     * @return Whether the image field is set.
     */
    @java.lang.Override
    public boolean hasImage() {
      return assetCase_ == 1;
    }
    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string image = 1;</code>
     * @return The image.
     */
    @java.lang.Override
    public java.lang.String getImage() {
      java.lang.String ref = "";
      if (assetCase_ == 1) {
        ref = (java.lang.String) asset_;
      }
      return ref;
    }
    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string image = 1;</code>
     * @return The bytes for image.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getImageBytes() {
      java.lang.String ref = "";
      if (assetCase_ == 1) {
        ref = (java.lang.String) asset_;
      }
      return com.google.protobuf.ByteString.copyFromUtf8(ref);
    }
    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string image = 1;</code>
     * @param value The image to set.
     */
    private void setImage(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  assetCase_ = 1;
      asset_ = value;
    }
    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string image = 1;</code>
     */
    private void clearImage() {
      if (assetCase_ == 1) {
        assetCase_ = 0;
        asset_ = null;
      }
    }
    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string image = 1;</code>
     * @param value The bytes for image to set.
     */
    private void setImageBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      asset_ = value.toStringUtf8();
      assetCase_ = 1;
    }

    public static final int LOTTIE_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 2;</code>
     * @return Whether the lottie field is set.
     */
    @java.lang.Override
    public boolean hasLottie() {
      return assetCase_ == 2;
    }
    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 2;</code>
     * @return The lottie.
     */
    @java.lang.Override
    public java.lang.String getLottie() {
      java.lang.String ref = "";
      if (assetCase_ == 2) {
        ref = (java.lang.String) asset_;
      }
      return ref;
    }
    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 2;</code>
     * @return The bytes for lottie.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLottieBytes() {
      java.lang.String ref = "";
      if (assetCase_ == 2) {
        ref = (java.lang.String) asset_;
      }
      return com.google.protobuf.ByteString.copyFromUtf8(ref);
    }
    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 2;</code>
     * @param value The lottie to set.
     */
    private void setLottie(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  assetCase_ = 2;
      asset_ = value;
    }
    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 2;</code>
     */
    private void clearLottie() {
      if (assetCase_ == 2) {
        assetCase_ = 0;
        asset_ = null;
      }
    }
    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 2;</code>
     * @param value The bytes for lottie to set.
     */
    private void setLottieBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      asset_ = value.toStringUtf8();
      assetCase_ = 2;
    }

    public static vault.media.MediaOuterClass.Media parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static vault.media.MediaOuterClass.Media parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static vault.media.MediaOuterClass.Media parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static vault.media.MediaOuterClass.Media parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static vault.media.MediaOuterClass.Media parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static vault.media.MediaOuterClass.Media parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static vault.media.MediaOuterClass.Media parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static vault.media.MediaOuterClass.Media parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static vault.media.MediaOuterClass.Media parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static vault.media.MediaOuterClass.Media parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static vault.media.MediaOuterClass.Media parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static vault.media.MediaOuterClass.Media parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(vault.media.MediaOuterClass.Media prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code vault.media.Media}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          vault.media.MediaOuterClass.Media, Builder> implements
        // @@protoc_insertion_point(builder_implements:vault.media.Media)
        vault.media.MediaOuterClass.MediaOrBuilder {
      // Construct using vault.media.MediaOuterClass.Media.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      @java.lang.Override
      public AssetCase
          getAssetCase() {
        return instance.getAssetCase();
      }

      public Builder clearAsset() {
        copyOnWrite();
        instance.clearAsset();
        return this;
      }


      /**
       * <pre>
       * Image link for the banner.
       * </pre>
       *
       * <code>string image = 1;</code>
       * @return Whether the image field is set.
       */
      @java.lang.Override
      public boolean hasImage() {
        return instance.hasImage();
      }
      /**
       * <pre>
       * Image link for the banner.
       * </pre>
       *
       * <code>string image = 1;</code>
       * @return The image.
       */
      @java.lang.Override
      public java.lang.String getImage() {
        return instance.getImage();
      }
      /**
       * <pre>
       * Image link for the banner.
       * </pre>
       *
       * <code>string image = 1;</code>
       * @return The bytes for image.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getImageBytes() {
        return instance.getImageBytes();
      }
      /**
       * <pre>
       * Image link for the banner.
       * </pre>
       *
       * <code>string image = 1;</code>
       * @param value The image to set.
       * @return This builder for chaining.
       */
      public Builder setImage(
          java.lang.String value) {
        copyOnWrite();
        instance.setImage(value);
        return this;
      }
      /**
       * <pre>
       * Image link for the banner.
       * </pre>
       *
       * <code>string image = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearImage() {
        copyOnWrite();
        instance.clearImage();
        return this;
      }
      /**
       * <pre>
       * Image link for the banner.
       * </pre>
       *
       * <code>string image = 1;</code>
       * @param value The bytes for image to set.
       * @return This builder for chaining.
       */
      public Builder setImageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setImageBytes(value);
        return this;
      }

      /**
       * <pre>
       * Lottie link for the banner.
       * </pre>
       *
       * <code>string lottie = 2;</code>
       * @return Whether the lottie field is set.
       */
      @java.lang.Override
      public boolean hasLottie() {
        return instance.hasLottie();
      }
      /**
       * <pre>
       * Lottie link for the banner.
       * </pre>
       *
       * <code>string lottie = 2;</code>
       * @return The lottie.
       */
      @java.lang.Override
      public java.lang.String getLottie() {
        return instance.getLottie();
      }
      /**
       * <pre>
       * Lottie link for the banner.
       * </pre>
       *
       * <code>string lottie = 2;</code>
       * @return The bytes for lottie.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getLottieBytes() {
        return instance.getLottieBytes();
      }
      /**
       * <pre>
       * Lottie link for the banner.
       * </pre>
       *
       * <code>string lottie = 2;</code>
       * @param value The lottie to set.
       * @return This builder for chaining.
       */
      public Builder setLottie(
          java.lang.String value) {
        copyOnWrite();
        instance.setLottie(value);
        return this;
      }
      /**
       * <pre>
       * Lottie link for the banner.
       * </pre>
       *
       * <code>string lottie = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLottie() {
        copyOnWrite();
        instance.clearLottie();
        return this;
      }
      /**
       * <pre>
       * Lottie link for the banner.
       * </pre>
       *
       * <code>string lottie = 2;</code>
       * @param value The bytes for lottie to set.
       * @return This builder for chaining.
       */
      public Builder setLottieBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLottieBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:vault.media.Media)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new vault.media.MediaOuterClass.Media();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "asset_",
              "assetCase_",
            };
            java.lang.String info =
                "\u0000\u0002\u0001\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u023b\u0000\u0002" +
                "\u023b\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<vault.media.MediaOuterClass.Media> parser = PARSER;
          if (parser == null) {
            synchronized (vault.media.MediaOuterClass.Media.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<vault.media.MediaOuterClass.Media>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:vault.media.Media)
    private static final vault.media.MediaOuterClass.Media DEFAULT_INSTANCE;
    static {
      Media defaultInstance = new Media();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Media.class, defaultInstance);
    }

    public static vault.media.MediaOuterClass.Media getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Media> PARSER;

    public static com.google.protobuf.Parser<Media> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MediaCTAOrBuilder extends
      // @@protoc_insertion_point(interface_extends:vault.media.MediaCTA)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Media.
     * </pre>
     *
     * <code>.vault.media.Media media = 1;</code>
     * @return Whether the media field is set.
     */
    boolean hasMedia();
    /**
     * <pre>
     * Media.
     * </pre>
     *
     * <code>.vault.media.Media media = 1;</code>
     * @return The media.
     */
    vault.media.MediaOuterClass.Media getMedia();

    /**
     * <pre>
     * CTA configuration for button.
     * </pre>
     *
     * <code>.vault.common.CTA cta = 2;</code>
     * @return Whether the cta field is set.
     */
    boolean hasCta();
    /**
     * <pre>
     * CTA configuration for button.
     * </pre>
     *
     * <code>.vault.common.CTA cta = 2;</code>
     * @return The cta.
     */
    vault.common.Cta.CTA getCta();
  }
  /**
   * Protobuf type {@code vault.media.MediaCTA}
   */
  public  static final class MediaCTA extends
      com.google.protobuf.GeneratedMessageLite<
          MediaCTA, MediaCTA.Builder> implements
      // @@protoc_insertion_point(message_implements:vault.media.MediaCTA)
      MediaCTAOrBuilder {
    private MediaCTA() {
    }
    public static final int MEDIA_FIELD_NUMBER = 1;
    private vault.media.MediaOuterClass.Media media_;
    /**
     * <pre>
     * Media.
     * </pre>
     *
     * <code>.vault.media.Media media = 1;</code>
     */
    @java.lang.Override
    public boolean hasMedia() {
      return media_ != null;
    }
    /**
     * <pre>
     * Media.
     * </pre>
     *
     * <code>.vault.media.Media media = 1;</code>
     */
    @java.lang.Override
    public vault.media.MediaOuterClass.Media getMedia() {
      return media_ == null ? vault.media.MediaOuterClass.Media.getDefaultInstance() : media_;
    }
    /**
     * <pre>
     * Media.
     * </pre>
     *
     * <code>.vault.media.Media media = 1;</code>
     */
    private void setMedia(vault.media.MediaOuterClass.Media value) {
      value.getClass();
  media_ = value;
      
      }
    /**
     * <pre>
     * Media.
     * </pre>
     *
     * <code>.vault.media.Media media = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMedia(vault.media.MediaOuterClass.Media value) {
      value.getClass();
  if (media_ != null &&
          media_ != vault.media.MediaOuterClass.Media.getDefaultInstance()) {
        media_ =
          vault.media.MediaOuterClass.Media.newBuilder(media_).mergeFrom(value).buildPartial();
      } else {
        media_ = value;
      }
      
    }
    /**
     * <pre>
     * Media.
     * </pre>
     *
     * <code>.vault.media.Media media = 1;</code>
     */
    private void clearMedia() {  media_ = null;
      
    }

    public static final int CTA_FIELD_NUMBER = 2;
    private vault.common.Cta.CTA cta_;
    /**
     * <pre>
     * CTA configuration for button.
     * </pre>
     *
     * <code>.vault.common.CTA cta = 2;</code>
     */
    @java.lang.Override
    public boolean hasCta() {
      return cta_ != null;
    }
    /**
     * <pre>
     * CTA configuration for button.
     * </pre>
     *
     * <code>.vault.common.CTA cta = 2;</code>
     */
    @java.lang.Override
    public vault.common.Cta.CTA getCta() {
      return cta_ == null ? vault.common.Cta.CTA.getDefaultInstance() : cta_;
    }
    /**
     * <pre>
     * CTA configuration for button.
     * </pre>
     *
     * <code>.vault.common.CTA cta = 2;</code>
     */
    private void setCta(vault.common.Cta.CTA value) {
      value.getClass();
  cta_ = value;
      
      }
    /**
     * <pre>
     * CTA configuration for button.
     * </pre>
     *
     * <code>.vault.common.CTA cta = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCta(vault.common.Cta.CTA value) {
      value.getClass();
  if (cta_ != null &&
          cta_ != vault.common.Cta.CTA.getDefaultInstance()) {
        cta_ =
          vault.common.Cta.CTA.newBuilder(cta_).mergeFrom(value).buildPartial();
      } else {
        cta_ = value;
      }
      
    }
    /**
     * <pre>
     * CTA configuration for button.
     * </pre>
     *
     * <code>.vault.common.CTA cta = 2;</code>
     */
    private void clearCta() {  cta_ = null;
      
    }

    public static vault.media.MediaOuterClass.MediaCTA parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static vault.media.MediaOuterClass.MediaCTA parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static vault.media.MediaOuterClass.MediaCTA parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static vault.media.MediaOuterClass.MediaCTA parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static vault.media.MediaOuterClass.MediaCTA parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static vault.media.MediaOuterClass.MediaCTA parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static vault.media.MediaOuterClass.MediaCTA parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static vault.media.MediaOuterClass.MediaCTA parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static vault.media.MediaOuterClass.MediaCTA parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static vault.media.MediaOuterClass.MediaCTA parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static vault.media.MediaOuterClass.MediaCTA parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static vault.media.MediaOuterClass.MediaCTA parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(vault.media.MediaOuterClass.MediaCTA prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code vault.media.MediaCTA}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          vault.media.MediaOuterClass.MediaCTA, Builder> implements
        // @@protoc_insertion_point(builder_implements:vault.media.MediaCTA)
        vault.media.MediaOuterClass.MediaCTAOrBuilder {
      // Construct using vault.media.MediaOuterClass.MediaCTA.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Media.
       * </pre>
       *
       * <code>.vault.media.Media media = 1;</code>
       */
      @java.lang.Override
      public boolean hasMedia() {
        return instance.hasMedia();
      }
      /**
       * <pre>
       * Media.
       * </pre>
       *
       * <code>.vault.media.Media media = 1;</code>
       */
      @java.lang.Override
      public vault.media.MediaOuterClass.Media getMedia() {
        return instance.getMedia();
      }
      /**
       * <pre>
       * Media.
       * </pre>
       *
       * <code>.vault.media.Media media = 1;</code>
       */
      public Builder setMedia(vault.media.MediaOuterClass.Media value) {
        copyOnWrite();
        instance.setMedia(value);
        return this;
        }
      /**
       * <pre>
       * Media.
       * </pre>
       *
       * <code>.vault.media.Media media = 1;</code>
       */
      public Builder setMedia(
          vault.media.MediaOuterClass.Media.Builder builderForValue) {
        copyOnWrite();
        instance.setMedia(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Media.
       * </pre>
       *
       * <code>.vault.media.Media media = 1;</code>
       */
      public Builder mergeMedia(vault.media.MediaOuterClass.Media value) {
        copyOnWrite();
        instance.mergeMedia(value);
        return this;
      }
      /**
       * <pre>
       * Media.
       * </pre>
       *
       * <code>.vault.media.Media media = 1;</code>
       */
      public Builder clearMedia() {  copyOnWrite();
        instance.clearMedia();
        return this;
      }

      /**
       * <pre>
       * CTA configuration for button.
       * </pre>
       *
       * <code>.vault.common.CTA cta = 2;</code>
       */
      @java.lang.Override
      public boolean hasCta() {
        return instance.hasCta();
      }
      /**
       * <pre>
       * CTA configuration for button.
       * </pre>
       *
       * <code>.vault.common.CTA cta = 2;</code>
       */
      @java.lang.Override
      public vault.common.Cta.CTA getCta() {
        return instance.getCta();
      }
      /**
       * <pre>
       * CTA configuration for button.
       * </pre>
       *
       * <code>.vault.common.CTA cta = 2;</code>
       */
      public Builder setCta(vault.common.Cta.CTA value) {
        copyOnWrite();
        instance.setCta(value);
        return this;
        }
      /**
       * <pre>
       * CTA configuration for button.
       * </pre>
       *
       * <code>.vault.common.CTA cta = 2;</code>
       */
      public Builder setCta(
          vault.common.Cta.CTA.Builder builderForValue) {
        copyOnWrite();
        instance.setCta(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * CTA configuration for button.
       * </pre>
       *
       * <code>.vault.common.CTA cta = 2;</code>
       */
      public Builder mergeCta(vault.common.Cta.CTA value) {
        copyOnWrite();
        instance.mergeCta(value);
        return this;
      }
      /**
       * <pre>
       * CTA configuration for button.
       * </pre>
       *
       * <code>.vault.common.CTA cta = 2;</code>
       */
      public Builder clearCta() {  copyOnWrite();
        instance.clearCta();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:vault.media.MediaCTA)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new vault.media.MediaOuterClass.MediaCTA();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "media_",
              "cta_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\t\u0002\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<vault.media.MediaOuterClass.MediaCTA> parser = PARSER;
          if (parser == null) {
            synchronized (vault.media.MediaOuterClass.MediaCTA.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<vault.media.MediaOuterClass.MediaCTA>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:vault.media.MediaCTA)
    private static final vault.media.MediaOuterClass.MediaCTA DEFAULT_INSTANCE;
    static {
      MediaCTA defaultInstance = new MediaCTA();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        MediaCTA.class, defaultInstance);
    }

    public static vault.media.MediaOuterClass.MediaCTA getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MediaCTA> PARSER;

    public static com.google.protobuf.Parser<MediaCTA> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
