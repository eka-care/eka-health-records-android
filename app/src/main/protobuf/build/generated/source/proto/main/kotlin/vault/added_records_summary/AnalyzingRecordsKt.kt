//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: added_records_summary.proto

package vault.added_records_summary;

@kotlin.jvm.JvmName("-initializeanalyzingRecords")
public inline fun analyzingRecords(block: vault.added_records_summary.AnalyzingRecordsKt.Dsl.() -> kotlin.Unit): vault.added_records_summary.AddedRecordsSummary.AnalyzingRecords =
  vault.added_records_summary.AnalyzingRecordsKt.Dsl._create(vault.added_records_summary.AddedRecordsSummary.AnalyzingRecords.newBuilder()).apply { block() }._build()
public object AnalyzingRecordsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vault.added_records_summary.AddedRecordsSummary.AnalyzingRecords.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vault.added_records_summary.AddedRecordsSummary.AnalyzingRecords.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vault.added_records_summary.AddedRecordsSummary.AnalyzingRecords = _builder.build()

    /**
     * <pre>
     * Total count i.e. manual upload + gmail sync upload.
     * </pre>
     *
     * <code>uint32 count = 1;</code>
     */
    public var count: kotlin.Int
      @JvmName("getCount")
      get() = _builder.getCount()
      @JvmName("setCount")
      set(value) {
        _builder.setCount(value)
      }
    /**
     * <pre>
     * Total count i.e. manual upload + gmail sync upload.
     * </pre>
     *
     * <code>uint32 count = 1;</code>
     */
    public fun clearCount() {
      _builder.clearCount()
    }

    /**
     * <pre>
     * Gmail sync records found, count is required field.
     * </pre>
     *
     * <code>optional .vault.gmail_sync.GmailSync gmail_sync = 2;</code>
     */
    public var gmailSync: vault.gmail_sync.GmailSyncOuterClass.GmailSync
      @JvmName("getGmailSync")
      get() = _builder.getGmailSync()
      @JvmName("setGmailSync")
      set(value) {
        _builder.setGmailSync(value)
      }
    /**
     * <pre>
     * Gmail sync records found, count is required field.
     * </pre>
     *
     * <code>optional .vault.gmail_sync.GmailSync gmail_sync = 2;</code>
     */
    public fun clearGmailSync() {
      _builder.clearGmailSync()
    }
    /**
     * <pre>
     * Gmail sync records found, count is required field.
     * </pre>
     *
     * <code>optional .vault.gmail_sync.GmailSync gmail_sync = 2;</code>
     * @return Whether the gmailSync field is set.
     */
    public fun hasGmailSync(): kotlin.Boolean {
      return _builder.hasGmailSync()
    }
    public val AnalyzingRecordsKt.Dsl.gmailSyncOrNull: vault.gmail_sync.GmailSyncOuterClass.GmailSync?
      get() = _builder.gmailSyncOrNull
  }
}
public inline fun vault.added_records_summary.AddedRecordsSummary.AnalyzingRecords.copy(block: vault.added_records_summary.AnalyzingRecordsKt.Dsl.() -> kotlin.Unit): vault.added_records_summary.AddedRecordsSummary.AnalyzingRecords =
  vault.added_records_summary.AnalyzingRecordsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val vault.added_records_summary.AddedRecordsSummary.AnalyzingRecordsOrBuilder.gmailSyncOrNull: vault.gmail_sync.GmailSyncOuterClass.GmailSync?
  get() = if (hasGmailSync()) getGmailSync() else null

