//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: media.proto

package vault.media;

@kotlin.jvm.JvmName("-initializemedia")
public inline fun media(block: vault.media.MediaKt.Dsl.() -> kotlin.Unit): vault.media.MediaOuterClass.Media =
  vault.media.MediaKt.Dsl._create(vault.media.MediaOuterClass.Media.newBuilder()).apply { block() }._build()
public object MediaKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vault.media.MediaOuterClass.Media.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vault.media.MediaOuterClass.Media.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vault.media.MediaOuterClass.Media = _builder.build()

    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string image = 1;</code>
     */
    public var image: kotlin.String
      @JvmName("getImage")
      get() = _builder.getImage()
      @JvmName("setImage")
      set(value) {
        _builder.setImage(value)
      }
    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string image = 1;</code>
     */
    public fun clearImage() {
      _builder.clearImage()
    }
    /**
     * <pre>
     * Image link for the banner.
     * </pre>
     *
     * <code>string image = 1;</code>
     * @return Whether the image field is set.
     */
    public fun hasImage(): kotlin.Boolean {
      return _builder.hasImage()
    }

    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 2;</code>
     */
    public var lottie: kotlin.String
      @JvmName("getLottie")
      get() = _builder.getLottie()
      @JvmName("setLottie")
      set(value) {
        _builder.setLottie(value)
      }
    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 2;</code>
     */
    public fun clearLottie() {
      _builder.clearLottie()
    }
    /**
     * <pre>
     * Lottie link for the banner.
     * </pre>
     *
     * <code>string lottie = 2;</code>
     * @return Whether the lottie field is set.
     */
    public fun hasLottie(): kotlin.Boolean {
      return _builder.hasLottie()
    }
    public val assetCase: vault.media.MediaOuterClass.Media.AssetCase
      @JvmName("getAssetCase")
      get() = _builder.getAssetCase()

    public fun clearAsset() {
      _builder.clearAsset()
    }
  }
}
public inline fun vault.media.MediaOuterClass.Media.copy(block: vault.media.MediaKt.Dsl.() -> kotlin.Unit): vault.media.MediaOuterClass.Media =
  vault.media.MediaKt.Dsl._create(this.toBuilder()).apply { block() }._build()

