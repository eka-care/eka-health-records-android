//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: records.proto

package vault.records;

@kotlin.jvm.JvmName("-initializerecordsResponse")
public inline fun recordsResponse(block: vault.records.RecordsResponseKt.Dsl.() -> kotlin.Unit): vault.records.Records.RecordsResponse =
  vault.records.RecordsResponseKt.Dsl._create(vault.records.Records.RecordsResponse.newBuilder()).apply { block() }._build()
public object RecordsResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vault.records.Records.RecordsResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vault.records.Records.RecordsResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vault.records.Records.RecordsResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ItemsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .vault.records.Item items = 1;</code>
     */
     public val items: com.google.protobuf.kotlin.DslList<vault.records.Records.Item, ItemsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getItemsList()
      )
    /**
     * <code>repeated .vault.records.Item items = 1;</code>
     * @param value The items to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addItems")
    public fun com.google.protobuf.kotlin.DslList<vault.records.Records.Item, ItemsProxy>.add(value: vault.records.Records.Item) {
      _builder.addItems(value)
    }
    /**
     * <code>repeated .vault.records.Item items = 1;</code>
     * @param value The items to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignItems")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<vault.records.Records.Item, ItemsProxy>.plusAssign(value: vault.records.Records.Item) {
      add(value)
    }
    /**
     * <code>repeated .vault.records.Item items = 1;</code>
     * @param values The items to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllItems")
    public fun com.google.protobuf.kotlin.DslList<vault.records.Records.Item, ItemsProxy>.addAll(values: kotlin.collections.Iterable<vault.records.Records.Item>) {
      _builder.addAllItems(values)
    }
    /**
     * <code>repeated .vault.records.Item items = 1;</code>
     * @param values The items to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllItems")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<vault.records.Records.Item, ItemsProxy>.plusAssign(values: kotlin.collections.Iterable<vault.records.Records.Item>) {
      addAll(values)
    }
    /**
     * <code>repeated .vault.records.Item items = 1;</code>
     * @param index The index to set the value at.
     * @param value The items to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setItems")
    public operator fun com.google.protobuf.kotlin.DslList<vault.records.Records.Item, ItemsProxy>.set(index: kotlin.Int, value: vault.records.Records.Item) {
      _builder.setItems(index, value)
    }
    /**
     * <code>repeated .vault.records.Item items = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearItems")
    public fun com.google.protobuf.kotlin.DslList<vault.records.Records.Item, ItemsProxy>.clear() {
      _builder.clearItems()
    }

    /**
     * <code>optional string next_page_token = 2;</code>
     */
    public var nextPageToken: kotlin.String
      @JvmName("getNextPageToken")
      get() = _builder.getNextPageToken()
      @JvmName("setNextPageToken")
      set(value) {
        _builder.setNextPageToken(value)
      }
    /**
     * <code>optional string next_page_token = 2;</code>
     */
    public fun clearNextPageToken() {
      _builder.clearNextPageToken()
    }
    /**
     * <code>optional string next_page_token = 2;</code>
     * @return Whether the nextPageToken field is set.
     */
    public fun hasNextPageToken(): kotlin.Boolean {
      return _builder.hasNextPageToken()
    }
  }
}
public inline fun vault.records.Records.RecordsResponse.copy(block: vault.records.RecordsResponseKt.Dsl.() -> kotlin.Unit): vault.records.Records.RecordsResponse =
  vault.records.RecordsResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

