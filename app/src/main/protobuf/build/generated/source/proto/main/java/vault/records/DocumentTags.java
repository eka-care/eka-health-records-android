// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: document_tags.proto

package vault.records;

public final class DocumentTags {
  private DocumentTags() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code vault.records.Tag}
   */
  public enum Tag
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Unspecified.
     * </pre>
     *
     * <code>TYPE_TAG_UNSPECIFIED = 0;</code>
     */
    TYPE_TAG_UNSPECIFIED(0),
    /**
     * <code>TYPE_TAG_SMART = 1;</code>
     */
    TYPE_TAG_SMART(1),
    /**
     * <code>TYPE_TAG_EXPIRED = 2;</code>
     */
    TYPE_TAG_EXPIRED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unspecified.
     * </pre>
     *
     * <code>TYPE_TAG_UNSPECIFIED = 0;</code>
     */
    public static final int TYPE_TAG_UNSPECIFIED_VALUE = 0;
    /**
     * <code>TYPE_TAG_SMART = 1;</code>
     */
    public static final int TYPE_TAG_SMART_VALUE = 1;
    /**
     * <code>TYPE_TAG_EXPIRED = 2;</code>
     */
    public static final int TYPE_TAG_EXPIRED_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Tag valueOf(int value) {
      return forNumber(value);
    }

    public static Tag forNumber(int value) {
      switch (value) {
        case 0: return TYPE_TAG_UNSPECIFIED;
        case 1: return TYPE_TAG_SMART;
        case 2: return TYPE_TAG_EXPIRED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Tag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Tag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Tag>() {
            @java.lang.Override
            public Tag findValueByNumber(int number) {
              return Tag.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return TagVerifier.INSTANCE;
    }

    private static final class TagVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TagVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return Tag.forNumber(number) != null;
            }
          };

    private final int value;

    private Tag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:vault.records.Tag)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
