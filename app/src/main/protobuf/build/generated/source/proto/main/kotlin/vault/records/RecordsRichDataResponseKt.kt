//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: records.proto

package vault.records;

@kotlin.jvm.JvmName("-initializerecordsRichDataResponse")
public inline fun recordsRichDataResponse(block: vault.records.RecordsRichDataResponseKt.Dsl.() -> kotlin.Unit): vault.records.Records.RecordsRichDataResponse =
  vault.records.RecordsRichDataResponseKt.Dsl._create(vault.records.Records.RecordsRichDataResponse.newBuilder()).apply { block() }._build()
public object RecordsRichDataResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vault.records.Records.RecordsRichDataResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vault.records.Records.RecordsRichDataResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vault.records.Records.RecordsRichDataResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DataProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .vault.records.RecordsRichDocumentResponse data = 1;</code>
     */
     public val data: com.google.protobuf.kotlin.DslList<vault.records.Records.RecordsRichDocumentResponse, DataProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getDataList()
      )
    /**
     * <code>repeated .vault.records.RecordsRichDocumentResponse data = 1;</code>
     * @param value The data to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addData")
    public fun com.google.protobuf.kotlin.DslList<vault.records.Records.RecordsRichDocumentResponse, DataProxy>.add(value: vault.records.Records.RecordsRichDocumentResponse) {
      _builder.addData(value)
    }
    /**
     * <code>repeated .vault.records.RecordsRichDocumentResponse data = 1;</code>
     * @param value The data to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignData")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<vault.records.Records.RecordsRichDocumentResponse, DataProxy>.plusAssign(value: vault.records.Records.RecordsRichDocumentResponse) {
      add(value)
    }
    /**
     * <code>repeated .vault.records.RecordsRichDocumentResponse data = 1;</code>
     * @param values The data to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllData")
    public fun com.google.protobuf.kotlin.DslList<vault.records.Records.RecordsRichDocumentResponse, DataProxy>.addAll(values: kotlin.collections.Iterable<vault.records.Records.RecordsRichDocumentResponse>) {
      _builder.addAllData(values)
    }
    /**
     * <code>repeated .vault.records.RecordsRichDocumentResponse data = 1;</code>
     * @param values The data to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllData")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<vault.records.Records.RecordsRichDocumentResponse, DataProxy>.plusAssign(values: kotlin.collections.Iterable<vault.records.Records.RecordsRichDocumentResponse>) {
      addAll(values)
    }
    /**
     * <code>repeated .vault.records.RecordsRichDocumentResponse data = 1;</code>
     * @param index The index to set the value at.
     * @param value The data to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setData")
    public operator fun com.google.protobuf.kotlin.DslList<vault.records.Records.RecordsRichDocumentResponse, DataProxy>.set(index: kotlin.Int, value: vault.records.Records.RecordsRichDocumentResponse) {
      _builder.setData(index, value)
    }
    /**
     * <code>repeated .vault.records.RecordsRichDocumentResponse data = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearData")
    public fun com.google.protobuf.kotlin.DslList<vault.records.Records.RecordsRichDocumentResponse, DataProxy>.clear() {
      _builder.clearData()
    }
  }
}
public inline fun vault.records.Records.RecordsRichDataResponse.copy(block: vault.records.RecordsRichDataResponseKt.Dsl.() -> kotlin.Unit): vault.records.Records.RecordsRichDataResponse =
  vault.records.RecordsRichDataResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

