//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: records.proto

package vault.records;

@kotlin.jvm.JvmName("-initializerecordMetadataPlus")
public inline fun recordMetadataPlus(block: vault.records.RecordMetadataPlusKt.Dsl.() -> kotlin.Unit): vault.records.Records.RecordMetadataPlus =
  vault.records.RecordMetadataPlusKt.Dsl._create(vault.records.Records.RecordMetadataPlus.newBuilder()).apply { block() }._build()
public object RecordMetadataPlusKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vault.records.Records.RecordMetadataPlus.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vault.records.Records.RecordMetadataPlus.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vault.records.Records.RecordMetadataPlus = _builder.build()

    /**
     * <code>.vault.records.RecordMetadata metadata = 1;</code>
     */
    public var metadata: vault.records.Records.RecordMetadata
      @JvmName("getMetadata")
      get() = _builder.getMetadata()
      @JvmName("setMetadata")
      set(value) {
        _builder.setMetadata(value)
      }
    /**
     * <code>.vault.records.RecordMetadata metadata = 1;</code>
     */
    public fun clearMetadata() {
      _builder.clearMetadata()
    }
    /**
     * <code>.vault.records.RecordMetadata metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    public fun hasMetadata(): kotlin.Boolean {
      return _builder.hasMetadata()
    }

    /**
     * <code>.vault.records.DocumentType document_type = 2;</code>
     */
    public var documentType: vault.records.DocumentTypes.DocumentType
      @JvmName("getDocumentType")
      get() = _builder.getDocumentType()
      @JvmName("setDocumentType")
      set(value) {
        _builder.setDocumentType(value)
      }
    /**
     * <code>.vault.records.DocumentType document_type = 2;</code>
     */
    public fun clearDocumentType() {
      _builder.clearDocumentType()
    }
  }
}
public inline fun vault.records.Records.RecordMetadataPlus.copy(block: vault.records.RecordMetadataPlusKt.Dsl.() -> kotlin.Unit): vault.records.Records.RecordMetadataPlus =
  vault.records.RecordMetadataPlusKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val vault.records.Records.RecordMetadataPlusOrBuilder.metadataOrNull: vault.records.Records.RecordMetadata?
  get() = if (hasMetadata()) getMetadata() else null

